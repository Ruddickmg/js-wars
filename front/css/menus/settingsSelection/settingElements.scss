$rotation-needed-for-diamond-shape: 45deg;
$minimum-swell-size: 0.8;
$maximum-swell-size: 1;
$setting-element-rotation: rotate($rotation-needed-for-diamond-shape);
$startingPointOfSwell: scale($minimum-swell-size) $setting-element-rotation;
$ending-point-of-swell: scale($maximum-swell-size) $setting-element-rotation;
$setting-element-inset-color: black;
$text-outline-color: black;
$text-outline-width: 2;
$setting-element-size: 80px;
$fog-title-position: 20%;
$weather-title-position: -20%;
$funds-title-position: 0;
$turn-title-position: 10%;
$capture-title-position: -25%;
$power-title-position: -10%;
$visuals-title-position: -10%;
$vertical-starting-point: 50;
$horizontal-starting-point: 5;
$vertical-space-between-elements: -6;
$horizontal-space-between-elements: 13;
$starting-delay: 0;
$animation-delay: 100;
$movement-speed: .8s;

@include swell(swellSettingBackground, $startingPointOfSwell, $ending-point-of-swell);
$swelling: swellSettingBackground 1s infinite ease;

.visible {
  opacity: 1;
}

.invisible {
  opacity: 0;
}

.move-home {
  opacity: 50;
}

.rules, .stable {
  @include size($setting-element-size);
  margin: 5px;
  position: absolute;
  display: inline-block;
  left: inherit;
  top: inherit;
}

.rules {
  box-shadow: 2px 0 8px 0 $setting-element-inset-color inset, 2px 0  0 $setting-element-inset-color;
  border: 6px solid white;
  will-change: transform;
  z-index: 1;
}

.stable {
  text-align: center;
  z-index: 2;
  h1 {
    font-size: 35px;
    position: absolute;
    top:-30px;
    z-index: 10;
  }
  ul {
    left: 5px;
    position: absolute;
    text-align: center;

    li {
      @include outlineText($text-outline-color, $text-outline-width);
      @include size($setting-element-size);
      will-change: opacity;
      line-height: $setting-element-size;
      color: white;
      font-size: 26px;
      text-align: center;
      padding-top: 6px;
    }
  }
}

@each $setting, $textPosition in zip(
    $settings,
    $fog-title-position $weather-title-position $funds-title-position $turn-title-position $capture-title-position $power-title-position $visuals-title-position
) {
  ##{$setting}Display h1 {
    left: $textPosition;
  }
}

$top: $vertical-starting-point;
$top-increment: $vertical-space-between-elements;
$left: $horizontal-starting-point;
$left-increment: $horizontal-space-between-elements;
$delay: $starting-delay;
$delay-increment: $animation-delay;


@each $setting in $settings {
  $position: translate3d(0, #{$top}vh, 0);
  $movements: (moveUpOnScreen, $below-screen, $position),
          (moveDownOnScreen, $above-screen, $position),
          (moveUpOffScreen, $position, $above-screen),
          (moveDownOffScreen, $position, $below-screen);
  @each $movement, $start, $end in $movements {
    @include move(#{$setting}-#{$movement}, $start, $end);
    .#{$setting}-#{$movement} {
      @include transform($start);
      left: $left#{"%"};
      animation: #{$setting}-#{$movement} $movement-speed ease;
      animation-delay: #{$delay}ms;
      animation-fill-mode: forwards;
      .rules {
        animation: $swelling;
      }
    }
  }
  .#{$setting} {
    @include transform(translate3d(0, #{$top}vh, 0));
    left: $left#{"%"};
    .rules {
      animation: $swelling;
    }
  }
  $top: $top + $top-increment;
  $left: $left + $left-increment;
  $delay: $delay + $delay-increment;
}
