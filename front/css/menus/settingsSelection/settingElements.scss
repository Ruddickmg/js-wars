$amountOfRotationForDiamondShape: 45deg;
$minimumSwellSize: 0.8;
$maximumSwellSize: 1;
$startingPointOfSwell: scale($minimumSwellSize) rotate($amountOfRotationForDiamondShape);
$endingPointOfSwell: scale($maximumSwellSize) rotate($amountOfRotationForDiamondShape);
$colorOfInsetOnSettingElement: black;
$colorOfTextOutline: black;
$thicknessOfTextOutline: 2;
$sizeOfSettingElement: 80px;
$positionOfFogTitle: 20%;
$positionOfWeatherTitle: -20%;
$positionOfFundsTitle: 0;
$positionOfTurnTitle: 10%;
$positionOfCaptureTitle: -25%;
$positionOfPowerTitle: -10%;
$positionOfVisualsTitle: -10%;
$vertical_starting_point: 50;
$horizontal_starting_point: 5;
$vertical_space_between_elements: -6;
$horizontal_space_between_elements: 13;
$starting-delay: 0;
$animation-delay: 100;

@include swell(swellSettingBackground, $startingPointOfSwell, $endingPointOfSwell);
$swelling: swellSettingBackground 1s infinite ease;

.visible {
  opacity: 1;
}

.invisible {
  opacity: 0;
}

.rules, .stable {
  @include size($sizeOfSettingElement);
  position: absolute;
  display: inline-block;
  left: inherit;
  top: inherit;
}

.rules {
  box-shadow: 2px 0 8px 0 $colorOfInsetOnSettingElement inset, 2px 0  0 $colorOfInsetOnSettingElement;
  border-style: solid;
  border-width: 5px 5px 5px;
  border-color: white;
  will-change: transform;
  z-index: 1;
}

.stable {
  text-align: center;
  z-index: 2;
  h1 {
    font-size: 35px;
    position: absolute;
    top:-30px;
    z-index: 10;
  }
  ul {
    left: 5px;
    position: absolute;
    text-align: center;

    li {
      @include outlineText($colorOfTextOutline, $thicknessOfTextOutline);
      @include size($sizeOfSettingElement);
      will-change: opacity;
      line-height: $sizeOfSettingElement;
      color: white;
      font-size: 26px;
      text-align: center;
      padding-top: 6px;
    }
  }
}

@each $setting, $textPosition in zip(
    $settings,
    $positionOfFogTitle
    $positionOfWeatherTitle
    $positionOfFundsTitle
    $positionOfTurnTitle
    $positionOfCaptureTitle
    $positionOfPowerTitle
    $positionOfVisualsTitle
) {
  ##{$setting}Display h1 {
    left: $textPosition;
  }
}

$top: $vertical_starting_point;
$top-increment: $vertical_space_between_elements;
$left: $horizontal_starting_point;
$left-increment: $horizontal_space_between_elements;
$delay: $starting-delay;
$delay-increment: $animation-delay;


@each $setting in $settings {
  $position: translate3d(0, #{$top}vh, 0);
  $movements: (moveUpOnScreen, $below-screen, $position),
          (moveDownOnScreen, $above-screen, $position),
          (moveUpOffScreen, $position, $above-screen),
          (moveDownOffScreen, $position, $below-screen);
  @each $movement, $start, $end in $movements {
    @include move(#{$setting}-#{$movement}, $start, $end);
    .#{$setting}-#{$movement} {
      @include transform($start);
      left: $left#{"%"};
      animation: #{$setting}-#{$movement} 1s ease;
      animation-delay: #{$delay}ms;
      animation-fill-mode: forwards;
      .rules {
        animation: $swelling;
      }
    }
  }
  .#{$setting} {
    @include transform(translate3d(0, #{$top}vh, 0));
    left: $left#{"%"};
    .rules {
      animation: $swelling;
    }
  }
  $top: $top + $top-increment;
  $left: $left + $left-increment;
  $delay: $delay + $delay-increment;
}
