{"version":3,"file":"playerSocketListener.js","sourceRoot":"","sources":["playerSocketListener.ts"],"names":[],"mappings":";;AAOA,oBAA2B,MAAiB;IAExC,MAAM,CAAE,MAAmB,CAAC,IAAI,KAAK,SAAS,CAAC;AACnD,CAAC;AAHD,gCAGC;AAED;IAEI,MAAM,SAAS,GAAG,CAAC,YAAiB,EAAE,MAAc,EAAE,KAAU;QAE5D,YAAY,CAAC,SAAS,CAAC,MAAM,CAAC,YAAY,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,KAAK,CAAC,CAAC;IAC9E,CAAC,CAAC;IACF,MAAM,OAAO,GAAG,CAAC,IAAU,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE,IAAI,CAAC,CAAC;IACtF,MAAM,MAAM,GAAG,CAAC,SAAc,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IAC7F,MAAM,OAAO,GAAG,CAAC,SAAc,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE,SAAS,CAAC,CAAC;IAC/F,MAAM,OAAO,GAAG,CAAC,QAAa,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,sBAAsB,EAAE;QAC5F,MAAM,EAAE,QAAQ,CAAC,MAAM;QACvB,MAAM,EAAE,IAAI;KACf,CAAC,CAAC;IACH,MAAM,MAAM,GAAG,CAAC,MAAW,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,MAAM,CAAC,CAAC;IACvF,MAAM,GAAG,GAAG,CAAC,IAAU,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,IAAI,CAAC,CAAC;IACjF,MAAM,OAAO,GAAG,CAAC,GAAQ,EAAE,MAAW,KAAY,SAAS,CAAC,MAAM,EAAE,SAAS,EAAE,GAAG,CAAC,CAAC;IACpF,MAAM,IAAI,GAAG,CAAC,WAAgB,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,WAAW,EAAE,WAAW,CAAC,CAAC;IAClG,MAAM,IAAI,GAAG,CAAC,OAAY,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,UAAU,EAAE,OAAO,CAAC,CAAC;IACzF,MAAM,UAAU,GAAG,CAAC,KAAU,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,YAAY,EAAE,KAAK,CAAC,CAAC;IAC7F,MAAM,QAAQ,GAAG,CAAC,IAAS,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,UAAU,EAAE,IAAI,CAAC,CAAC;IACvF,MAAM,IAAI,GAAG,CAAC,IAAU,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,aAAa,EAAE,IAAI,CAAC,CAAC;IACvF,MAAM,MAAM,GAAG,CAAC,SAAc,EAAE,MAAW,KAAW,SAAS,CAAC,MAAM,EAAE,QAAQ,EAAE,SAAS,CAAC,CAAC;IAE7F,MAAM,CAAC;QACH,OAAO;QACP,MAAM;QACN,OAAO;QACP,OAAO;QACP,MAAM;QACN,GAAG;QACH,OAAO;QACP,IAAI;QACJ,IAAI;QACJ,UAAU;QACV,QAAQ;QACR,IAAI;QACJ,MAAM;KACT,CAAC;AACN,CAAC;AAtCD,4BAsCC","sourcesContent":["import {Game} from \"../../game/game\";\nimport {Unit} from \"../../game/map/elements/unit/unit\";\nimport {AiPlayer} from \"../ai/aiPlayer\";\nimport {Player} from \"./player\";\n\nexport type AnyPlayer = Player | AiPlayer;\n\nexport function isAiPlayer(player: AnyPlayer): player is AiPlayer {\n\n    return (player as AiPlayer).emit !== undefined;\n}\n\nexport default function() {\n\n    const broadcast = (playerSocket: any, action: string, value: any): void => {\n\n        playerSocket.broadcast.moveTo(playerSocket.room.name).emit(action, value);\n    };\n    const addUnit = (unit: Unit, socket: any): void => broadcast(socket, \"addUnit\", unit);\n    const attack = (attacking: any, socket: any): void => broadcast(socket, \"attack\", attacking);\n    const capture = (capturing: any, socket: any): void => broadcast(socket, \"capture\", capturing);\n    const confirm = (response: any, socket: any): void => broadcast(socket, \"confirmationResponse\", {\n        answer: response.answer,\n        sender: this,\n    });\n    const defeat = (battle: any, socket: any): void => broadcast(socket, \"defeat\", battle);\n    const del = (unit: Unit, socket: any): void => broadcast(socket, \"delete\", unit);\n    const endTurn = (end: any, socket: any): void =>  broadcast(socket, \"endTurn\", end);\n    const join = (joinedUnits: any, socket: any): void => broadcast(socket, \"joinUnits\", joinedUnits);\n    const load = (loading: any, socket: any): void => broadcast(socket, \"loadUnit\", loading);\n    const moveCursor = (moved: any, socket: any): void => broadcast(socket, \"cursorMove\", moved);\n    const moveUnit = (move: any, socket: any): void => broadcast(socket, \"moveUnit\", move);\n    const save = (game: Game, socket: any): void => broadcast(socket, \"confirmSave\", game);\n    const unload = (transport: any, socket: any): void => broadcast(socket, \"unload\", transport);\n\n    return {\n        addUnit,\n        attack,\n        capture,\n        confirm,\n        defeat,\n        del,\n        endTurn,\n        join,\n        load,\n        moveCursor,\n        moveUnit,\n        save,\n        unload,\n    };\n}\n"]}