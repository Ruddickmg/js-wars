{"version":3,"file":"room.js","sourceRoot":"","sources":["room.ts"],"names":[],"mappings":"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","sourcesContent":["import {Game} from \"../game/game\";\nimport {AiPlayer} from \"../users/ai/aiPlayer\";\nimport {Player} from \"../users/players/player\";\nimport {AnyPlayer, isAiPlayer} from \"../users/players/playerSocketListener\";\nimport {UserId} from \"../users/user\";\n\nexport type RoomId = number | string;\n\nexport interface Room {\n\n    id(): RoomId;\n    getGame(): Game;\n    name(): string;\n    hasStarted(): boolean;\n    hasBeenSaved(): boolean;\n    category(): string;\n    isEmpty(): boolean;\n    isFull(): boolean;\n    size(): number;\n    all(): AnyPlayer[];\n    users(): Player[];\n    getPlayer(id: RoomId): AnyPlayer;\n    addAi(aiPlayer: AiPlayer): AiPlayer;\n    isSameAs(room: Room): boolean;\n    add(player: Player): Room;\n    getAiPlayers(): AiPlayer[];\n    removePlayer(id: UserId): AnyPlayer;\n    replacePlayer(id: UserId, replacement: AnyPlayer): AnyPlayer;\n}\n\nexport default function(id: RoomId, game: Game): Room {\n\n    const category: string = game.category;\n    const players: AnyPlayer[] = game.players;\n    const invalidIndex = -1;\n    const indexOf = (roomId: RoomId): number => players.reduce((desiredIndex, player, index) => {\n\n        const foundMatchingId: boolean = player.id === roomId;\n        const indexHasNotBeenChanged: boolean = desiredIndex <= invalidIndex;\n\n        return foundMatchingId && indexHasNotBeenChanged ? index : desiredIndex;\n\n    }, invalidIndex);\n\n    return {\n\n        add(player: Player): Room {\n\n            players.push(player);\n\n            return this;\n        },\n        addAi: (aiPlayer: AiPlayer): AiPlayer => {\n\n            const index: number = indexOf(aiPlayer.id);\n\n            players.splice(index, 0, aiPlayer);\n\n            return aiPlayer;\n        },\n        all: (): Player[] => players.slice(),\n        category: (): string => category,\n        getAiPlayers(): AiPlayer[] {\n\n            return players.reduce((aiPlayers: AiPlayer[], player: AnyPlayer): AiPlayer[] => {\n\n                if (isAiPlayer(player)) {\n\n                    aiPlayers.push(player);\n                }\n\n                return aiPlayers;\n\n            }, []);\n        },\n        getGame: (): Game => game,\n        getPlayer: (roomId: RoomId): AnyPlayer => players[indexOf(roomId)],\n        hasBeenSaved: (): boolean => game.saved,\n        hasStarted: (): boolean => game.started,\n        id: (): RoomId => id,\n        isEmpty: (): boolean => !this.users().length,\n        isFull: (): boolean => players.length >= game.max,\n        isSameAs(room: any): boolean {\n\n            return [\"id\", \"name\", \"created\"].reduce((isTheSame: boolean, property: string) => {\n\n                return this[property] === room[property] && isTheSame;\n\n            }, true);\n        },\n        name: (): string => game.name,\n        size: (): number => players.length,\n        users(): Player[] {\n\n            return players.reduce((users: Player[], player: Player): Player[] => {\n\n                if (!player.isComputer) {\n\n                    users.push(player);\n                }\n\n                return users;\n\n            }, []);\n        },\n        removePlayer(userId: UserId): AnyPlayer {\n\n            const index: number = indexOf(userId);\n\n            if (!isNaN(index)) {\n\n                return players.splice(index, 1)[0];\n            }\n        },\n        replacePlayer(userId: UserId, replacement: AnyPlayer): AnyPlayer {\n\n            const index: number = indexOf(userId);\n\n            if (!isNaN(index)) {\n\n                return players.splice(index, 1, replacement)[0];\n            }\n        },\n    };\n}\n"]}