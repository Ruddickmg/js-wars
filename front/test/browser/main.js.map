{"version":3,"file":"main.js","sourceRoot":"","sources":["main.ts"],"names":[],"mappings":";;AAAA,yEAA8F;AAC9F,uDAAsD;AACtD,yEAA8F;AAC9F,+DAA+D;AAC/D,uDAAwD;AAExD,MAAM,SAAS,GAAqB,6BAAgB,CAAC,GAAG,sBAAmB,CAAC,sBAAsB,CAAC,CAAC;AACpG,MAAM,aAAa,GAAG,oBAAgB,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC,8BAA8B;AAC9E,MAAM,UAAU,GAAqB,6BAAgB,CAAC,aAAa,EAAE,SAAS,CAAC,CAAC;AAChF,MAAM,YAAY,GAAG,SAAS,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC;AACnD,MAAM,gBAAgB,GAAG,YAAY,CAAC,UAAU,EAAE,CAAC;AACnD,MAAM,aAAa,GAAG,CAAC,MAAc,EAAE,iBAAyB,EAAE,eAAuB;IAErF,MAAM,CAAC,CAAC,MAAM,GAAG,iBAAiB,CAAC,GAAG,eAAe,CAAC;AAC1D,CAAC,CAAC;AACF,MAAM,qBAAqB,GAAG,aAAa,CACvC,YAAY,CAAC,MAAM,EAAE,EACrB,sBAAmB,CAAC,6BAA6B,EACjD,sBAAmB,CAAC,2BAA2B,CAClD,CAAC;AAEF,UAAU,CAAC,aAAa,CAAC,gBAAgB,EAAE,qBAAqB,CAAC,CAAC;AAElE,MAAM,CAAC,SAAS,CAAC,QAAQ,GAAG;IAExB,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,WAAW,EAAE,GAAG,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;AACxD,CAAC,CAAC;AAEF,MAAM,CAAC,gBAAgB,CAAC,OAAO,EAAE,CAAC,CAAC,KAAK,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,MAAM,EAAE,IAAI,IAAI,EAAE,CAAC,CAAC,CAAC","sourcesContent":["import {AnimationHandler, default as animationHandler} from \"./animation/animationHandler.js\";\nimport createDimensions from \"./animation/dimensions\";\nimport {default as screenController, ScreenController} from \"./animation/screenController.js\";\nimport screenConfiguration from \"./configuration/screenConfig\";\nimport app = require(\"./configuration/settings/app.js\");\n\nconst animation: AnimationHandler = animationHandler(...screenConfiguration.listOfCanvasAnimations);\nconst mapDimensions = createDimensions(50, 25); // replace with map dimensions\nconst gameScreen: ScreenController = screenController(mapDimensions, animation);\nconst cursorCanvas = animation.getCanvas(\"cursor\");\nconst canvasDimensions = cursorCanvas.dimensions();\nconst calculateBase = (pixels: number, horizontalSquares: number, verticalSquares: number): number => {\n\n    return (pixels / horizontalSquares) / verticalSquares;\n};\nconst baseSizeForGridSquare = calculateBase(\n    cursorCanvas.pixels(),\n    screenConfiguration.numberOfHorizontalGridSquares,\n    screenConfiguration.numberOfVerticalGridSquares,\n);\n\ngameScreen.setDimensions(canvasDimensions, baseSizeForGridSquare);\n\nString.prototype.uc_first = function() {\n\n    return this.charAt(0).toUpperCase() + this.slice(1);\n};\n\nwindow.addEventListener(\"wheel\", (e) => app.scroll.wheel(e.deltaY, new Date()));\n\n"]}