{"version":3,"file":"table.js","sourceRoot":"","sources":["table.ts"],"names":[],"mappings":"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","sourcesContent":["import createRow from \"./row\";\nimport setText from \"./setText\";\nimport createUnorderedList from \"./ul\";\n\nexport default function(name: string, items: any[], userDefinedRows?: string[]) {\n\n    const tableRows: string[] = userDefinedRows || Object.keys(items);\n    const tableElement: any = document.createElement(\"table\");\n    const headings: any = createRow(name, tableRows, \"th\").row;\n    const title: any = setText(document.createElement(\"caption\"), name);\n\n    tableElement.setAttribute(\"id\", `${name}Table`);\n    tableElement.appendChild(title);\n    tableElement.appendChild(headings);\n\n    return {\n\n        columns: createUnorderedList(headings),\n        element: tableElement,\n        elements: items.map((item) => {\n\n            const table = this.element;\n            const playerNumber = item.player;\n            const rowData = tableRows.map((column) => {\n\n                const columnName = column.toLowerCase();\n\n                return item[columnName];\n            });\n            const newRow = createRow(`player${playerNumber}${name}`, rowData).row;\n\n            table.appendChild(newRow);\n\n            return newRow;\n        }),\n        rows: createUnorderedList(this.element, this.elements),\n        sortBy(parameter: string) {\n\n            const sortedItems = items.sort((a, b) => a[parameter] - b[parameter]);\n\n            this.setElements(sortedItems);\n        },\n        setElements: (listOfElements: any[]) => {\n\n            const table = this.element;\n            const elements = table.childNodes;\n            const index = this.rows.index();\n\n            let l = elements.length - 2;\n\n            while (l--) {\n\n                table.removeChild(table.lastChild);\n            }\n\n            return this.rows.setElements(listOfElements.map((row) => {\n\n                const rowData = tableRows.map((column) => row[column.toLowerCase()]);\n                const newRow = createRow(`player${row.player}${name}`, rowData).row;\n\n                table.appendChild(newRow);\n\n                return newRow;\n            }))\n            .setIndex(index);\n        },\n        title,\n    };\n}\n"]}