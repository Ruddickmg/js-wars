{"version":3,"file":"backend.js","sourceRoot":"","sources":["backend.ts"],"names":[],"mappings":"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","sourcesContent":["import request from \"request-promise-native\";\n\ntype BackendId = number | string;\n\ninterface Parameters {\n\n    method: string;\n    uri: string;\n    json: boolean;\n}\n\nexport interface Backend {\n\n    getLogin(password: string, email: string): Promise<any>;\n    getUser(origin: string, id: BackendId): Promise<any>;\n    getMaps(category: string): Promise<any>;\n    getGames(id: BackendId): Promise<any>;\n    saveGame(id: BackendId): Promise<any>;\n    saveUser(user: string): Promise<any>;\n    saveMap(map: string): Promise<any>;\n    deleteUser(id: BackendId): Promise<any>;\n    deleteGame(id: BackendId): Promise<any>;\n    deleteMap(id: BackendId): Promise<any>;\n    sync(): Promise<any>;\n    migrate(): Promise<any>;\n}\n\nexport default function(url: string): Backend {\n\n    const formatUrl = (path: string, input: BackendId): string => `${url}${path}${input}`;\n    const combine = (...objects: object[]) => Object.assign({}, ...objects);\n    const makeRequest = (\n\n        method: string,\n        path: string = \"\",\n        input: BackendId = \"\",\n        headers: object = {},\n\n    ): Promise<any> => {\n\n        const json: boolean = true;\n        const uri: string = formatUrl(path, input);\n        const requestParameters: Parameters = {json, method, uri};\n        const requestObject: object = combine(requestParameters, headers);\n\n        return request(requestObject);\n    };\n    const get = (path: string, input?: BackendId): Promise<any> => makeRequest(\"GET\", path, input);\n    const del = (path: string, input: BackendId): Promise<any> => makeRequest(\"DELETE\", path, input);\n    const post = (path: string, input: BackendId): Promise<any> => makeRequest(\"POST\", path, input, {\n        body: JSON.stringify(input),\n        headers: {\"Content-Type\" : \"application/json\"},\n    });\n    const deleteGame = (id: BackendId): Promise<any> => del(\"/games/remove\", id);\n    const deleteMap = (id: BackendId): Promise<any> => del(\"/maps/remove\", id);\n    const deleteUser = (id: BackendId): Promise<any> => del(\"/users/remove\", id);\n    const getGames = (id: BackendId): Promise<any> => get(\"/games/saved\", id);\n    const getLogin = (email: string, password: string): Promise<any> => get(\"/users/login\", `${email}/${password}`);\n    const getMaps = (category: string): Promise<any> => get(\"/maps/type\", category);\n    const getUser = (origin: string, id: BackendId): Promise<any> => get(\"/users\", `${origin}/${id}`);\n    const migrate = (): Promise<any> => get(\"/migrate\").then(({success: migrationWasSuccessful}) => {\n\n        return migrationWasSuccessful ?\n            Promise.resolve(migrationWasSuccessful) :\n            Promise.reject(new Error(\"Could not complete migration.\"));\n\n    });\n    const saveGame = (game: any): Promise<any> => post(\"/games/save\", game);\n    const saveMap = (map: string): Promise<any> => post(\"/maps/save\", map);\n    const saveUser = (user: string): Promise<any> => post(\"/users/save\", user);\n    const sync = (): Promise<any> => get(\"/sync\").then(({error, results}): Promise<any> => {\n\n        return error ?\n            Promise.reject(new Error(\"Could not sync with database.\")) :\n            Promise.resolve(results);\n    });\n\n    return {\n\n        deleteGame,\n        deleteMap,\n        deleteUser,\n        getGames,\n        getLogin,\n        getMaps,\n        getUser,\n        migrate,\n        saveGame,\n        saveMap,\n        saveUser,\n        sync,\n    };\n}\n"]}