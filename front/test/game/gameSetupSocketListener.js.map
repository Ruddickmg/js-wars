{"version":3,"file":"gameSetupSocketListener.js","sourceRoot":"","sources":["gameSetupSocketListener.ts"],"names":[],"mappings":"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","sourcesContent":["import {Client} from \"../clients/client\";\nimport {ClientHandler} from \"../clients/clients\";\nimport {AnyRoom, isRoom, Rooms} from \"../rooms/rooms\";\nimport {Player} from \"../users/players/player\";\nimport {Game} from \"./game\";\n\nexport default function(clients: ClientHandler, rooms: Rooms) {\n\n    return {\n\n        background(error: Error, type: string, socket: any): void {\n\n            const client: Client = clients.bySocket(socket);\n            const room: AnyRoom = client.room();\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            if (isRoom(room)) {\n\n                room.getGame().background = type;\n\n                client.broadcast(\"background\", type);\n            }\n        },\n        start(error: Error, game: Game, socket: any): void {\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            clients.bySocket(socket).broadcast(\"start\", game);\n        },\n        ready(error: Error, isReady: boolean, socket: any): void {\n\n            const client: Client = clients.bySocket(socket);\n            const player: Player = client.player();\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            player.ready = isReady;\n\n            client.broadcast(\"readyStateChange\", player);\n        },\n        setUserProperties(error: Error, properties: any, socket: any): void {\n\n            const {player, property, value} = properties;\n            const client: Client = clients.bySocket(socket);\n            const storedPlayer: Player = client.room()\n                    .getPlayer(player);\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            if (storedPlayer) {\n\n                storedPlayer[property] = value;\n            }\n\n            client.broadcast(\"propertyChange\", error || properties);\n        },\n        gameReadyChat(error: Error, message: any, socket: any): void {\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            clients.bySocket(socket).broadcast(\"gameReadyMessage\", message);\n        },\n        setMap(error: Error, map: any, socket: any) {\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            socket.broadcast\n                .moveTo(socket.room.name)\n                .emit(\"setMap\", map);\n        },\n        boot(error: Error, bootedPlayer: any, socket: any): void {\n\n            const client: Client = clients.bySocket(socket);\n            const room = client.room();\n            const player: Player = room.getPlayer(bootedPlayer.id);\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            if (player) {\n\n                client.emit(\"back\", true);\n                client.joinRoom(rooms.lobby());\n                client.broadcast(\"userRemoved\", player);\n\n            } else {\n\n                client.broadcast(\"userRemoved\", false);\n            }\n        },\n    };\n}\n"]}