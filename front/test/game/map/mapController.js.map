{"version":3,"file":"mapController.js","sourceRoot":"","sources":["mapController.ts"],"names":[],"mappings":"AAAA;;;;2GAI2G;AAE3G,YAAY,CAAC;;AAEb,MACI,SAAS,GAAG,OAAO,CAAC,uBAAuB,CAAC;AAC5C,gDAAgD;AAChD,MAAM,GAAG,OAAO,CAAC,oBAAoB,CAAC,EACtC,aAAa,GAAG,OAAO,CAAC,mBAAmB,CAAC,EAC5C,cAAc,GAAG,OAAO,CAAC,oBAAoB,CAAC,EAC9C,UAAU,GAAG,OAAO,CAAC,gBAAgB,CAAC,EACtC,QAAQ,GAAG,OAAO,CAAC,wBAAwB,CAAC,EAC5C,cAAc,GAAG,OAAO,CAAC,uBAAuB,CAAC,EACjD,iBAAiB,GAAG,OAAO,CAAC,0BAA0B,CAAC,EACvD,kBAAkB,GAAG,OAAO,CAAC,2BAA2B,CAAC,EACzD,GAAG,GAAG,OAAO,CAAC,oBAAoB,CAAC,CAAC;AAExC,GAAG,CAAC,QAAQ,GAAG,OAAO,CAAC,qBAAqB,CAAC,CAAC;AAC9C,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,0BAA0B,CAAC,CAAC;AAClD,GAAG,CAAC,KAAK,GAAG,OAAO,CAAC,yBAAyB,CAAC,CAAC;AAC/C,GAAG,CAAC,OAAO,GAAG,OAAO,CAAC,kCAAkC,CAAC,CAAC;AAE1D;IAEI,IACI,OAAO,EACP,MAAM,EACN,YAAY,EACZ,gBAAgB,EAChB,GAAG,GAAG,EAAE,EACR,SAAS,GAAG,EAAE,EACd,OAAO,GAAG,EAAE,EACZ,KAAK,GAAG,EAAE,CAAC;IAEf,+CAA+C;IAE/C,MACI,UAAU,GAAG;QAET,GAAG,EAAE,CAAC,KAAK,EAAE,MAAM,EAAE,OAAO,CAAC;QAC7B,IAAI,EAAE,IAAI,CAAC,GAAG;QACd,KAAK,EAAE,IAAI,CAAC,GAAG;QACf,IAAI,EAAE,CAAC,MAAM,CAAC;QACd,IAAI,EAAE,CAAC,MAAM,CAAC;QACd,MAAM,EAAE,CAAC,QAAQ,CAAC;QAClB,KAAK,EAAE,CAAC,OAAO,CAAC;KACnB,EACD,SAAS,GAAG,CAAC,EAAC,CAAC,EAAC,CAAC,EAAC;QAEd,MACI,cAAc,GAAG,iBAAiB,CAAC,EAAE,EACrC,IAAI,GAAG,iBAAiB,CAAC,IAAI,EAC7B,WAAW,GAAG,CAAC,KAAK,EAAE,SAAS,EAAE,OAAO,CAAC,EACzC,OAAO,GAAG,aAAa,CAAC,OAAO,EAAE,IAAI,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;QAEzD,MAAM,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,QAAQ;YAE1C,MAAM,QAAQ,GAAG,QAAQ,CAAC,IAAI,CAAC,CAAC,OAAO,KAAK,cAAc,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC,CAAC;YAE9E,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;gBAEX,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,GAAG,QAAQ,CAAC;YACzC,CAAC;YAED,MAAM,CAAC,SAAS,CAAC;QAErB,CAAC,EAAE,EAAE,CAAC,CAAC;IACX,CAAC,EACD,WAAW,GAAG,CAAC,OAAO;QAElB,MACI,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EACtC,WAAW,GAAG;YACV,IAAI,EAAE,KAAK;YACX,QAAQ,EAAE,SAAS;YACnB,OAAO,EAAE,OAAO;SACnB,CAAE,IAAI,CAAC,CAAC;QAEb,MAAM,CAAC,QAAQ,CAAC,OAAO,EAAE,WAAW,CAAC,CAAC;IAC1C,CAAC,EACD,QAAQ,GAAG,CAAC,OAAO,EAAE,QAAQ;QAEzB,MACI,SAAS,GAAG,cAAc,CAAC,EAAE,CAAC,OAAO,CAAC,EACtC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QAEnD,MAAM,CAAC,QAAQ,CAAC,SAAS,CAAC,CAAC,UAAU;YAEjC,MACI,YAAY,GAAG,cAAc,CAAC,EAAE,CAAC,UAAU,CAAC,EAC5C,cAAc,GAAG,iBAAiB,CAAC,EAAE,CAAC,QAAQ,EAAE,UAAU,CAAC,CAAC;YAEhE,MAAM,CAAC,SAAS,KAAK,YAAY,IAAI,cAAc,CAAC;QACxD,CAAC,CAAC,CAAC;IACP,CAAC,EACD,OAAO,GAAG,CAAC,IAAI,KAAK,GAAG,CAAC,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,EAC7C,SAAS,GAAG,CAAC,QAAQ;QAEjB,MAAM,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,CAAC;QAEvC,MAAM,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,SAAS,EAAE,QAAQ;YAExC,MAAM,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;YAE1C,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAEV,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC5B,CAAC;YAED,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC,CAAC,CAAC;IACP,CAAC,EACD,MAAM,GAAG;QAEL,IAAI,CAAC,OAAO;YAER,YAAY,IAAI,CAAC,CAAC;YAElB,GAAG,CAAC,GAAG,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;QAChC,CAAC;QACD,QAAQ,CAAC,OAAO;YAEZ,MACI,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,EAC5B,cAAc,GAAG,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAE5C,gBAAgB,IAAI,CAAC,CAAC;YAEtB,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,cAAc,CAAC,CAAC;QAC/C,CAAC;QACD,GAAG,CAAC,OAAO;YAEP,MACI,KAAK,GAAG,WAAW,CAAC,OAAO,CAAC,EAC5B,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,EAC7B,UAAU,GAAG,aAAa,CAAC,KAAK,EAAE,QAAQ,CAAC,EAC3C,eAAe,GAAG,iBAAiB,CAAC,UAAU,CAAC,EAC/C,gBAAgB,GAAG,MAAM,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC;YAEtD,OAAO,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,gBAAgB,CAAC,CAAC;QAC/C,CAAC;KACJ,EACD,OAAO,GAAG,CAAC,IAAI;QAEX,KAAK,CAAC,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAEhC,OAAO,EAAE,CAAC;IACd,CAAC,EACD,aAAa,GAAG,CAAC,OAAO;QAEpB,MACI,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EACtC,aAAa,GAAG,MAAM,CAAC,IAAI,CAAC,CAAC;QAEjC,EAAE,CAAC,CAAC,aAAa,CAAC,CAAC,CAAC;YAEhB,aAAa,CAAC,OAAO,CAAC,CAAC;QAE3B,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,QAAQ,EAAE,CAAC,CAAC;QACtC,CAAC;IACL,CAAC,CAAC;IAEN,IAAI,MAAM,GAAG,UAAU,OAAO;QAE1B,IAAI,OAAO,EAAE,IAAI,EAAE,CAAC,CAAC;QAErB,MACI,QAAQ,GAAG,OAAO,CAAC,QAAQ,EAAE,EAC7B,SAAS,GAAG,QAAQ,CAAC,SAAS,EAAE,EAChC,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EACtC,OAAO,GAAG,UAAU,CAAC,IAAI,CAAC,EAC1B,IAAI,GAAG,EAAE,CAAC;QAEd,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAEX,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YAEvC,IAAI,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAEjC,EAAE,CAAC,CAAC,OAAO,CAAC,OAAO,CAAC,iBAAiB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;gBAErD,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;YAC1C,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,KAAK,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAErD,MAAM,CAAC,EAAE,CAAC;QACd,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAEb,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,IAAI,CAAC,IAAI,CAAC,IAAI,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAEzC,MAAM,CAAC,UAAU,CAAC;YACtB,CAAC;YAED,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAEZ,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,OAAO,GAAG,WAAW,CAAC;YAC7C,CAAC;YACD,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;gBAEjB,MAAM,CAAC,WAAW,CAAC;YACvB,CAAC;YACD,IAAI,CAAC,CAAC;gBAEF,MAAM,CAAC,aAAa,CAAC;YACzB,CAAC;QAEL,CAAC;QAAC,IAAI,CAAC,EAAE,CAAA,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAElB,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;gBAEd,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,YAAY,GAAG,YAAY,CAAC;YACnD,CAAC;YAED,MAAM,CAAC,WAAW,CAAC;QAEvB,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC,CAAC;YAEpB,MAAM,CAAC,IAAI,CAAC,IAAI,GAAG,WAAW,GAAG,aAAa,CAAC;QAEnD,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAEnB,MAAM,CAAC,YAAY,CAAA;QACvB,CAAC;QAED,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC;IAEF,IAAI,iBAAiB,GAAG,UAAU,OAAO;QAErC,MAAM,CAAC,iBAAiB,CAAC,UAAU,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,EAAE,OAAO,CAAC,CAAC;IACpG,CAAC,CAAC;IAEF,IAAI,kBAAkB,GAAG,UAAU,OAAO;QAEtC,IAAI,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC;QACnD,IAAI,YAAY,GAAG,QAAQ,CAAC,WAAW,EAAE,CAAC;QAE1C,GAAG,CAAC,CAAC,IAAI,QAAQ,EAAE,QAAQ,EAAE,IAAI,EAAE,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,YAAY,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;YAExE,QAAQ,GAAG,MAAM,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC;YAE5C,EAAE,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,IAAI,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,iBAAiB,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAEjH,aAAa,CAAC,QAAQ,EAAE,KAAK,CAAC,CAAC;YAEnC,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC,QAAQ,GAAG,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;gBAElD,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;gBAEnD,EAAE,CAAC,CAAC,iBAAiB,CAAC,MAAM,CAAC,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEjD,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAC5B,CAAC;YACL,CAAC;QACL,CAAC;IACL,CAAC,CAAC;IAEF,IAAI,OAAO,GAAG,UAAU,OAAO;QAE3B,EAAE,CAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAEjB,IAAI,SAAS,GAAG,iBAAiB,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,SAAS,EAAE,CAAC;YAEhE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,EAAE,CAAC,IAAI,CAAC,EAAE,CAAC;gBAE3C,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;oBAEvB,MAAM,CAAC,IAAI,CAAC;gBAChB,CAAC;YACL,CAAC;QACL,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC,CAAC;IAEF,IAAI,SAAS,GAAG,UAAU,IAAI,EAAE,QAAQ,EAAE,QAAQ;QAE9C,IAAI,OAAO,GAAG,QAAQ,CAAC,QAAQ,IAAI,QAAQ,CAAC,OAAO,CAAC;QAEpD,IAAI,GAAG,UAAU,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,EAAE,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;QAEhH,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,IAAI,cAAc,CAAC,UAAU,CAAC,cAAc,CAAC,QAAQ,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAE3F,YAAY,IAAI,CAAC,CAAC;YAElB,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,EAAE,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,CAAC;QAE5E,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,IAAI,cAAc,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;YAE7D,YAAY,IAAI,CAAC,CAAC;YAElB,MAAM,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;QACzB,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC,CAAC;IAEF,IAAI,SAAS,GAAG,UAAU,EAAE;QAExB,IAAI,QAAQ,EAAE,CAAC,GAAG,SAAS,CAAC,MAAM,CAAC;QAEnC,OAAO,CAAC,EAAE,EAAE,CAAC;YAET,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAC;YAExB,EAAE,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;gBAEzD,MAAM,CAAC,CAAC,CAAC;YACb,CAAC;QACL,CAAC;QAED,MAAM,CAAC,KAAK,CAAC;IACjB,CAAC,CAAC;IAEF,IAAI,aAAa,GAAG,UAAU,QAAQ,EAAE,QAAQ,EAAE,QAAQ;QAEtD,IAAI,EAAE,CAAC;QAEP,QAAQ,GAAG,cAAc,CAErB,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,EACjC,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,EACpC,kBAAkB,CAAC,MAAM,CAAC,QAAQ,CAAC,EACnC,SAAS,CAAC,MAAM,CACnB,CAAC;QAEF,EAAE,CAAC,CAAC,kBAAkB,CAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC;YAE5E,MAAM,CAAC,MAAM,CAAC,SAAS,CAAC,EAAE,CAAC,CAAC,CAAC;YAC7B,SAAS,CAAC,MAAM,CAAC,EAAE,EAAE,CAAC,CAAC,CAAC;QAC5B,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEpB,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;QAElE,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,SAAS,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;QAC7B,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/C,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC,CAAC;YAEjD,IAAI,QAAQ,EAAE,SAAS,GAAG,SAAS,CAAC,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC;YACzE,IAAI,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC;YAEjB,OAAO,CAAC,EAAE,EAAE,CAAC;gBAET,QAAQ,GAAG,SAAS,CAAC,CAAC,CAAC,CAAA;gBAEvB,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,EAAE,CAAC,EAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC;YAC1E,CAAC;QACL,CAAC;QAED,EAAE,CAAC,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YAEjB,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC;QAED,gBAAgB,IAAI,CAAC,CAAC;QAEtB,MAAM,CAAC,QAAQ,CAAC;IACpB,CAAC,CAAC;IAEF,IAAI,YAAY,GAAG,UAAU,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ;QAE1D,EAAE,CAAC,CAAC,IAAI,KAAK,OAAO,IAAI,KAAK,CAAC,QAAQ,CAAC,OAAO,CAAC,IAAI,IAAI,KAAK,OAAO,IAAI,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAEhG,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,OAAO,GAAG,iBAAiB,CAAC,aAAa,CAAC,OAAO,CAAC,IAAI,EAAE,EAAE,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEjG,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,MAAM,CAAC;QAE/B,kBAAkB,CAAC,OAAO,CAAC,CAAC;QAE5B,EAAE,CAAC,CAAC,CAAC,iBAAiB,CAAC,OAAO,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;YAE/C,OAAO,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,OAAO,CAAC,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;QAE9D,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,OAAO,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;QAC1B,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC,CAAC;YAEpB,SAAS,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,QAAQ,CAAC,EAAE,CAAC,CAAC,CAAC;QACxD,CAAC;QAED,EAAE,CAAC,CAAC,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC;YAEhB,EAAE,CAAC,CAAC,CAAC,cAAc,CAAC,UAAU,CAAC,OAAO,EAAE,QAAQ,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAErD,KAAK,CAAC,MAAM,CAAC,WAAW,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC,CAAC;gBAE5C,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAClC,CAAC;QAEL,CAAC;QAAC,IAAI,CAAC,CAAC;YAEJ,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC;QAED,MAAM,CAAC,OAAO,CAAC;IACnB,CAAC,CAAC;IAEF,MAAM,CAAC;QAEH,YAAY,EAAE,SAAS;QACvB,WAAW,EAAE,WAAW;QACxB,QAAQ,EAAE,QAAQ;QAClB,WAAW,EAAE,SAAS;QACtB,OAAO,EAAE,OAAO;QAEhB,EAAE,EAAE;YAEA,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;QAClB,CAAC;QAED,IAAI,EAAE;YAEF,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC;QACpB,CAAC;QAED,OAAO,EAAE;YAEL,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC;QACvB,CAAC;QAED,QAAQ,EAAE,UAAU,CAAC;YAEjB,EAAE,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEd,MAAM,IAAI,KAAK,CAAC,kDAAkD,CAAC,CAAC;YACxE,CAAC;YAED,KAAK,GAAG,CAAC,CAAC;QACd,CAAC;QAED,OAAO,EAAE,UAAU,IAAI;YAEnB,MAAM,CAAC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC;QACxC,CAAC;QAED,QAAQ,EAAE;YAEN,MAAM,CAAC,GAAG,CAAC,QAAQ,CAAC;QACxB,CAAC;QAED,UAAU,EAAE;YAER,IAAI,UAAU,GAAG,GAAG,CAAC,UAAU,CAAC;YAEhC,MAAM,CAAE,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC,EAAE,UAAU,CAAC,CAAC,EAAE,CAAC;QACjD,CAAC;QAED,UAAU,EAAE;YAER,MAAM,CAAC,UAAU,CAAC;QACtB,CAAC;QAED,aAAa,EAAE,UAAU,IAAI;YAEzB,UAAU,GAAG,aAAa,CAAC,IAAI,CAAC,CAAC;QACrC,CAAC;QAED,SAAS,EAAE;YAEP,MAAM,CAAC,SAAS,CAAC;QACrB,CAAC;QAED,YAAY,EAAE,UAAU,CAAC;YAErB,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;gBAEf,MAAM,IAAI,KAAK,CAAC,sDAAsD,CAAC,CAAC;YAC5E,CAAC;YAED,SAAS,GAAG,CAAC,CAAC;QAClB,CAAC;QAED,OAAO,EAAE;YAEL,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QAED,MAAM,EAAE,UAAU,OAAO;YAErB,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;QAClC,CAAC;QAED,KAAK,EAAE;YAEH,MAAM,CAAC,KAAK,CAAC;QACjB,CAAC;QAED,GAAG,EAAE,UAAU,QAAQ,EAAE,OAAO;YAE5B,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;QAC9C,CAAC;QAED,GAAG,EAAE;YAED,MAAM,CAAC,GAAG,CAAC;QACf,CAAC;QAED,GAAG,EAAE,UAAU,WAAW;YAEtB,GAAG,GAAG,WAAW,CAAC;QACtB,CAAC;QAED,UAAU,EAAE,UAAU,MAAM;YAExB,IAAI,GAAG,GAAG,GAAG,CAAC,UAAU,EAAE,OAAO,GAAG,CAAC,GAAG,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAEpD,MAAM,GAAG,IAAI,MAAM,CAAC,GAAG,CAAC,CAAC;YAEzB,gBAAgB,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,EAAE,CAAC,GAAG,CAAC,CAAC;YAC7C,YAAY,GAAG,IAAI,CAAC,IAAI,CAAC,OAAO,GAAC,IAAI,CAAC,CAAC;YAEvC,OAAO,GAAI,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,UAAU,CAAC;gBAElC,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,aAAa,CAAC,iBAAiB,CAAC,IAAI,CAAC,CAAC,CAAC,EAAE,iBAAiB,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YAClG,CAAC,CAAC,CAAC;YAEH,SAAS,GAAG,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,UAAU,CAAC,EAAE,KAAK;gBAE5C,IAAI,MAAM,GAAG,kBAAkB,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAE1C,MAAM,CAAC,MAAM,CAAC,MAAM,CAChB,cAAc,CACV,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,kBAAkB,CAAC,IAAI,CAAC,CAAC,CAAC,EACxD,kBAAkB,CAAC,QAAQ,CAAC,CAAC,CAAC,EAC9B,CAAC,MAAM,GAAG,MAAM,GAAG,gBAAgB,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EACnE,KAAK,CACR,CACJ,CAAC;YACN,CAAC,CAAC,CAAC;YAEH,KAAK,GAAG,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,CAAC;gBAE7B,IAAI,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;gBAEtC,IAAI,IAAI,GAAG,UAAU,CACjB,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,cAAc,CAAC,IAAI,CAAC,CAAC,CAAC,EAChD,CAAC,MAAM,GAAG,MAAM,GAAG,gBAAgB,CAAC,EAAE,CAAC,GAAG,CAAC,OAAO,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EACnE,cAAc,CAAC,QAAQ,CAAC,CAAC,CAAC,CAC7B,CAAC;gBAEF,EAAE,CAAC,CAAC,GAAG,CAAC,KAAK,IAAI,GAAG,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC,CAAC;oBAElC,cAAc,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,CAAC,CAAC;gBACnC,CAAC;gBAED,MAAM,CAAC,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAC/B,CAAC,CAAC,CAAC;QACP,CAAC;QAED,QAAQ,EAAE,UAAU,IAAI,EAAE,MAAM;YAE5B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAClC,IAAI,OAAO,GAAG,KAAK,CAAC,KAAK,CAAC,CAAC;YAC3B,IAAI,OAAO,GAAG,MAAM,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;YAEtC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;gBAEV,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAE3B,CAAC;YAAC,IAAI,CAAC,CAAC;gBAEJ,OAAO,GAAG,IAAI,CAAC;YACnB,CAAC;YAED,OAAO,GAAG,cAAc,CAAC,WAAW,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAEtD,EAAE,CAAC,CAAC,CAAC,OAAO,IAAI,CAAC,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC;gBAEjD,MAAM,CAAC,MAAM,CAAC,OAAO,CAAC,CAAC;YAC3B,CAAC;YAED,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,OAAO,CAAC,CAAC;YAEhC,OAAO,EAAE,CAAC;YAEV,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QAED,UAAU,EAAE,UAAU,IAAI;YAEtB,OAAO,CAAC,GAAG,CAAC,gBAAgB,CAAC,CAAC;YAC9B,OAAO,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC;YAElB,IAAI,KAAK,GAAG,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC;YAElC,EAAE,CAAC,CAAC,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;gBAEhB,IAAI,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;YACrC,CAAC;YAED,EAAE,CAAC,CAAC,CAAC,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,IAAI,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,IAAI,cAAc,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC,CAAC,CAAC;gBAE5G,MAAM,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YACxB,CAAC;YAED,OAAO,EAAE,CAAC;YAEV,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,UAAU,EAAE,UAAU,IAAI,EAAE,MAAM;YAE9B,IAAI,MAAM,GAAG,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;YAEzC,KAAK,CAAC,QAAQ,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;YAEzD,MAAM,CAAC,GAAG,CAAC,IAAI,CAAC,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC,CAAC;QACjD,CAAC;QAED,WAAW,EAAE,UAAU,OAAO,EAAE,MAAM;YAElC,IAAI,OAAO,GAAG,MAAM,CAAC,GAAG,CAAC,OAAO,CAAC,CAAC;YAElC,QAAQ,GAAG,iBAAiB,CAAC,MAAM,CAAC,OAAO,CAAC,GAAG,cAAc,CAAC,QAAQ,CAAC,OAAO,CAAC,GAAG,OAAO,CAAC;YAE1F,kBAAkB,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC;YAC/C,QAAQ,CAAC,OAAO,EAAE,CAAC;YAEnB,EAAE,CAAC,CAAC,CAAC,kBAAkB,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;gBAEpC,MAAM,IAAI,KAAK,CAAC,uDAAuD,CAAC,CAAC;YAC7E,CAAC;YAED,kBAAkB,CAAC,SAAS,CAAC,MAAM,EAAE,QAAQ,CAAC,CAAC,OAAO,CAAC,QAAQ,CAAC,CAAC;YAEjE,OAAO,EAAE,CAAC;QACd,CAAC;QAED,MAAM,EAAE,UAAU,EAAE;YAEhB,IAAI,KAAK,GAAG,kBAAkB,CAAC,OAAO,CAAC,EAAE,CAAC,CAAC;YAE3C,IAAI,QAAQ,GAAG,cAAc,CACzB,MAAM,EACN,kBAAkB,CAAC,QAAQ,CAAC,EAAE,CAAC,EAC/B,kBAAkB,CAAC,MAAM,CAAC,EAAE,CAAC,EAC7B,KAAK,CACR,CAAC;YAEF,SAAS,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,EAAE,QAAQ,CAAC,CAAC;YAErC,MAAM,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;QAC5B,CAAC;QAED,WAAW,EAAC;YAER,MAAM,CAAC,GAAG,EAAE,CAAC;QACjB,CAAC;QAED,KAAK,EAAE;YAEH,MAAM,CAAC,KAAK,EAAE,CAAC;YAEf,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QAED,KAAK,EAAE;YAEH,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,SAAS,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,CAAC,CAAC,CAAC;gBAEnE,GAAG,CAAC,GAAG,CAAC,IAAI,EAAE,CAAC;gBACf,GAAG,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;gBACpB,GAAG,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC;gBAClB,OAAO,EAAE,CAAC;gBACV,OAAO,GAAG,KAAK,CAAC;YAEpB,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,GAAG,CAAC,GAAG,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,GAAG,CAAC,GAAG,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC;gBAEnF,GAAG,CAAC,GAAG,CAAC,kBAAkB,EAAE,CAAC;gBAC7B,GAAG,CAAC,QAAQ,CAAC,kBAAkB,EAAE,CAAC;gBAClC,GAAG,CAAC,MAAM,CAAC,kBAAkB,EAAE,CAAC;gBAChC,OAAO,CAAC,IAAI,CAAC,CAAC;gBACd,OAAO,GAAG,IAAI,CAAC;YACnB,CAAC;YAED,OAAO,EAAE,CAAC;QACd,CAAC;QAED,OAAO,EAAE;YAEL,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QAED,OAAO,EAAE;YAEL,GAAG,CAAC,OAAO,CAAC,CAAC,MAAM,EAAC,UAAU,CAAC,CAAC,CAAC;QACrC,CAAC;QAED,KAAK,EAAE,UAAU,OAAO,EAAE,CAAC;YAEvB,IAAI,QAAQ,GAAG,IAAI,QAAQ,CAAC,QAAQ,CAAC,CAAC,EAAE,QAAQ,CAAC,CAAC,CAAC,CAAC;YACpD,IAAI,IAAI,GAAG,iBAAiB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;YAC3C,IAAI,QAAQ,GAAG,SAAS,CAAC,QAAQ,CAAC,CAAC;YAEnC,MAAM,CAAC;gBACH,IAAI,EAAE,SAAS,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;gBAC5C,QAAQ,EAAE,aAAa,CAAC,OAAO,EAAE,QAAQ,EAAE,QAAQ,CAAC;gBACpD,OAAO,EAAE,YAAY,CAAC,OAAO,EAAE,QAAQ,EAAE,IAAI,EAAE,QAAQ,CAAC;aAC3D,CAAC,IAAI,CAAC,CAAC;QACZ,CAAC;QAED,OAAO,EAAE;YAEL,MAAM,CAAC,EAAE,QAAQ,EAAE,gBAAgB,EAAE,IAAI,EAAE,YAAY,EAAE,CAAC;QAC9D,CAAC;QAED,cAAc,EAAE,cAAY,CAAC;QAC7B,cAAc,EAAE,cAAY,CAAC;QAE7B,GAAG,EAAE,UAAU,MAAM;YAEjB,MAAM,CAAC;gBAEH,MAAM,EAAE,MAAM;gBACd,IAAI,EAAE,GAAG,CAAC,IAAI;gBACd,OAAO,EAAE,GAAG,CAAC,OAAO;gBACpB,QAAQ,EAAE,GAAG,CAAC,QAAQ;gBACtB,UAAU,EAAE,GAAG,CAAC,UAAU;gBAC1B,OAAO,EAAE,GAAG,CAAC,GAAG,CAAC,OAAO,EAAE;gBAC1B,SAAS,EAAE,GAAG,CAAC,GAAG,CAAC,SAAS,EAAE;gBAC9B,KAAK,EAAE,GAAG,CAAC,GAAG,CAAC,KAAK,EAAE;gBACtB,UAAU,EAAE,UAAU;aACzB,CAAC;QACN,CAAC;QAED,SAAS,EAAE;YAEP,MAAM,CAAC,KAAK,CAAC,GAAG,CAAC,UAAU,IAAI;gBAE3B,MAAM,CAAC;oBACH,IAAI,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC/B,EAAE,EAAE,cAAc,CAAC,MAAM,CAAC,IAAI,CAAC;oBAC/B,GAAG,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;oBAC9B,MAAM,EAAE,cAAc,CAAC,IAAI,CAAC,IAAI,CAAC;iBACpC,CAAC;YACN,CAAC,CAAC,CAAC;QACP,CAAC;KACJ,CAAC;AACN,CAAC;AApuBD,4BAouBC;AAED,MAAM,CAAC,OAAO,GAAG,aAAa,EAAE,CAAC","sourcesContent":["/* ------------------------------------------------------------------------------------------------------*\\\n\n    controller/map.js controls the setting up and modification of the map\n\n\\* ------------------------------------------------------------------------------------------------------*/\n\n\"use strict\";\n\nconst\n    calculate = require(\"../tools/calculate.js\"),\n    // Validator = require(\"../tools/validator.js\"),\n    Matrix = require(\"../tools/matrix.js\"),\n    createTerrain = require(\"../map/terrain.js\"),\n    createBuilding = require(\"../map/building.js\"),\n    createUnit = require(\"../map/unit.js\"),\n    Position = require(\"../objects/position.js\"),\n    unitController = require(\"../controller/unit.js\"),\n    terrainController = require(\"../controller/terrain.js\"),\n    buildingController = require(\"../controller/building.js\"),\n    app = require(\"../settings/app.js\");\n\napp.settings = require(\"../settings/game.js\");\napp.players = require(\"../controller/players.js\");\napp.units = require(\"../definitions/units.js\");\napp.animate = require(\"../animation/animationHandler.js\");\n\nexport default function() {\n\n    let\n        focused,\n        matrix,\n        allowedUnits,\n        allowedBuildings,\n        map = {},\n        buildings = [],\n        terrain = [],\n        units = [];\n\n    // const validate = new Validator(\"mapEditor\");\n\n    const\n        restricted = {\n\n            sea: [\"sea\", \"reef\", \"shoal\"],\n            reef: this.sea,\n            shoal: this.sea,\n            road: [\"road\"],\n            pipe: [\"pipe\"],\n            bridge: [\"bridge\"],\n            river: [\"river\"]\n        },\n        occupants = ({x,y}) => {\n\n            const\n                onSamePosition = terrainController.on,\n                type = terrainController.type,\n                mapElements = [units, buildings, terrain],\n                terrain = createTerrain(\"plain\", new Position(x, y));\n\n            return mapElements.reduce((occupants, elements) => {\n\n                const occupant = elements.find((element) => onSamePosition(terrain, element));\n\n                if (occupant) {\n\n                    occupants[type(occupant)] = occupant;\n                }\n\n                return occupants;\n\n            }, {});\n        },\n        detectIndex = (element) => {\n\n            const\n                type = terrainController.type(element),\n                mapElements = {\n                    unit: units,\n                    building: buildings,\n                    terrain: terrain\n                } [type];\n\n            return getIndex(element, mapElements);\n        },\n        getIndex = (element, elements) => {\n\n            const\n                elementId = unitController.id(element),\n                position = terrainController.position(element);\n\n            return elements.findIndex((comparison) => {\n\n                const\n                    comparisonId = unitController.id(comparison),\n                    onSamePosition = terrainController.on(position, comparison);\n\n                return elementId === comparisonId || onSamePosition;\n            });\n        },\n        refresh = (hide) => app.animate(\"unit\", hide),\n        neighbors = (position) => {\n\n            const positions = position.neighbors();\n\n            return positions.reduce((neighbors, neighbor) => {\n\n                const element = matrix.position(neighbor);\n\n                if (element) {\n\n                    neighbors.push(element);\n                }\n\n                return neighbors;\n            });\n        },\n        remove = {\n\n            unit(element) {\n\n                allowedUnits += 1;\n\n                app.map.removeUnit(element);\n            },\n            building(element) {\n\n                const\n                    index = detectIndex(element),\n                    storedBuilding = matrix.remove(element);\n\n                allowedBuildings += 1;\n\n                buildings.splice(index, 1, storedBuilding);\n            },\n            sea(element) {\n\n                const\n                    index = detectIndex(element),\n                    position = element.position(),\n                    seaTerrain = createTerrain(\"sea\", position),\n                    orientedTerrain = adjustOrientation(seaTerrain),\n                    storedSeaTerrain = matrix.insert(orientedTerrain);\n\n                terrain.splice(index, 1, storedSeaTerrain);\n            }\n        },\n        addUnit = (unit) => {\n\n            units.push(matrix.insert(unit));\n\n            refresh();\n        },\n        deleteElement = (element) => {\n\n            const\n                type = terrainController.type(element),\n                removeElement = remove[type];\n\n            if (removeElement) {\n\n                removeElement(element);\n\n            } else {\n\n                matrix.remove(element.position());\n            }\n        };\n\n    var facing = function (element) {\n\n        let allowed, elem, i;\n\n        const\n            position = element.position(),\n            neighbors = position.neighbors(),\n            name = terrainController.name(element),\n            allowed = restricted[name],\n            open = {};\n\n        if (!allowed) {\n\n            return \"\";\n        }\n\n        for (i = 0; i < neighbors.length; i += 1) {\n\n            elem = app.map.top(neighbors[i]);\n\n            if (allowed.indexOf(terrainController.name(elem)) > -1) {\n\n                open[neighbors[i].orientation] = true;\n            }\n        }\n\n        if (open.north && open.south && open.west && open.east) {\n\n            return \"\";\n        }\n\n        if (open.north) {\n\n            if (open.south && !open.east && !open.west) {\n\n                return \"verticle\";\n            }\n\n            if (open.west) {\n\n                return open.east ? \"north\" : \"northWest\";\n            }\n            else if (open.east) {\n\n                return \"northEast\";\n            }\n            else {\n\n                return \"closedNorth\";\n            }\n\n        } else if(open.east) {\n\n            if (!open.south) {\n\n                return open.west ? \"horazontal\" : \"closedEast\";\n            }\n\n            return \"southEast\";\n\n        } else if (open.south) {\n\n            return open.west ? \"southWest\" : \"closedSouth\";\n        \n        } else if (open.west) {\n\n            return \"closedWest\"\n        }\n\n        return \"single\";\n    };\n    \n    var adjustOrientation = function (element) {\n\n        return terrainController.setDrawing(facing(element) + terrainController.name(element), element);\n    };\n\n    var adjustSurroundings = function (element) {\n\n        var position = terrainController.position(element);\n        var surroundings = position.surrounding();\n\n        for (var adjusted, neighbor, name, i = 0; i < surroundings.length; i += 1) {\n\n            neighbor = matrix.position(surroundings[i]);\n\n            if (terrainController.isShoal(neighbor) || terrainController.isReef(element) && !terrainController.isSea(neighbor)) {\n\n                deleteElement(neighbor, \"sea\");\n            \n            } else if ((adjusted = adjustOrientation(neighbor))) {\n\n                terrain.splice(detectIndex(neighbor), 1, adjusted);\n\n                if (terrainController.isUnit(matrix.get(neighbor))) {\n\n                    matrix.insert(adjusted);\n                }\n            }\n        }\n    };\n\n    var isBeach = function (element) {\n\n        if (isSea(element)) {\n\n            var neighbors = terrainController.position(element).neighbors();\n\n            for (var i = 0; i < neighbors.length; i += 1) {\n\n                if (!isSea(neighbors[i])) {\n\n                    return true;\n                }\n            }\n        }\n\n        return false;\n    };\n\n    var buildUnit = function (unit, position, existing) {\n\n        var element = existing.building || existing.terrain;\n\n        unit = createUnit(unitController.player(unit), new Position(position.x, position.y), unitController.name(unit));\n\n        if (existing.unit && unitController.canBuildOn(unitController.occupies(existing.unit), unit)) {\n\n            allowedUnits -= 1;\n\n            return units.splice(detectIndex(existing.unit), 1, matrix.insert(unit));\n\n        } else if (element && unitController.canBuildOn(element, unit)) {\n\n            allowedUnits -= 1;\n\n            return addUnit(unit);\n        }\n\n        return false;\n    };\n\n    var indexOfHQ = function (hq) {\n\n        var building, l = buildings.length;\n\n        while (l--) {\n\n            building = buildings[l];\n\n            if (buildingController.isHQ(building) && hq.owns(building)) {\n\n                return l;\n            }\n        }\n\n        return false;\n    };\n\n    var buildBuilding = function (building, position, existing) {\n\n        var hq;\n\n        building = createBuilding(\n\n            buildingController.name(building), \n            new Position(position.x, position.y), \n            buildingController.player(building),\n            buildings.length\n        );\n\n        if (buildingController.isHQ(building) && (hq = indexOfHQ(building)) !== false) {\n\n            matrix.remove(buildings[hq]);\n            buildings.splice(hq, 1);\n        }\n\n        if (existing.building) {\n\n            buildings.splice(detectIndex(existing.building), 1, building);\n        \n        } else {\n\n            buildings.push(building);\n        }\n\n        if (!terrainController.isPlain(existing.terrain)) {\n\n            terrain.splice(detectIndex(existing.terrain), 1);\n\n            var neighbor, neighbors = neighbors(new Position(position.x,position.y));\n            var l = n.length;\n\n            while (l--) {\n\n                neighbor = neighbors[l]\n\n                terrain.splice(detectIndex(neighbor), 1, adjustOrientation(neighbor));\n            }\n        }\n\n        if (!existing.unit) {\n\n            matrix.insert(building);\n        }\n\n        allowedBuildings -= 1;\n\n        return building;\n    };\n\n    var buildTerrain = function (element, position, type, existing) {\n\n        if (type === \"river\" && isSea(existing.terrain) || type === \"shoal\" && !isBeach(existing.terrain)) {\n\n            return false;\n        }\n\n        element = adjustOrientation(createTerrain(element.draw(), new Position(position.x, position.y)));\n\n        element.index = terrain.length;\n\n        adjustSurroundings(element);\n    \n        if (!terrainController.isPlain(existing.terrain)) {\n\n            terrain.splice(detectIndex(existing.terrain), 1, element);\n\n        } else {\n\n            terrain.push(element);\n        }\n        \n        if (existing.building) {\n\n            buildings.splice(detectIndex(existing.building), 1);\n        }\n\n        if (existing.unit) {\n\n            if (!unitController.canBuildOn(element, existing.unit)) {\n\n                units.splice(detectIndex(existing.unit), 1);\n\n                return matrix.insert(element);\n            }\n\n        } else {\n\n            return matrix.insert(element);\n        }\n\n        return element;\n    };\n\n    return {\n\n        getNeighbors: neighbors,\n        detectIndex: detectIndex,\n        getIndex: getIndex,\n        occupantsOf: occupants,\n        addUnit: addUnit,\n\n        id: function () { \n\n            return map.id; \n        },\n\n        name: function () { \n\n            return map.name; \n        },\n\n        players: function () { \n\n            return map.players; \n        },\n\n        setUnits: function (u) {\n\n            if (!isArray(u)) {\n\n                throw new Error(\"First argument of \\\"setUnits\\\" must be an array.\");\n            }\n\n            units = u;\n        },\n\n        getUnit: function (unit) { \n\n            return units[getIndex(unit, units)]; \n        },\n\n        category: function () { \n\n            return map.category; \n        },\n\n        dimensions: function () { \n\n            var dimensions = map.dimensions;\n\n            return  { x: dimensions.x, y: dimensions.y };\n        },\n\n        background: function () { \n\n            return background; \n        },\n\n        setBackground: function (type) { \n\n            background = createTerrain(type); \n        },\n\n        buildings: function () { \n\n            return buildings; \n        },\n\n        setBuildings: function (b) {\n\n            if (!b.isArray()) {\n\n                throw new Error(\"First argument of \\\"setBuildings\\\" must be an array.\");\n            }\n\n            buildings = b;\n        },\n\n        terrain: function () { \n\n            return terrain; \n        },\n\n        insert: function (element) { \n\n            return matrix.insert(element); \n        },\n\n        units: function () {\n\n            return units; \n        },\n\n        top: function (position, replace) {\n\n            return matrix.position(position, replace); \n        },\n\n        get: function () { \n\n            return map; \n        },\n\n        set: function (selectedMap) { \n\n            map = selectedMap; \n        },\n\n        initialize: function (editor) {\n\n            var dim = map.dimensions, product = (dim.x * dim.y);\n\n            matrix = new Matrix(dim);\n\n            allowedBuildings = Math.ceil(product/10) - 1;\n            allowedUnits = Math.ceil(product/12.5);\n\n            terrain =  map.terrain.map(function (t) {\n\n                return matrix.insert(createTerrain(terrainController.type(t), terrainController.position(t)));\n            });\n\n            buildings = map.buildings.map(function (b, index) {\n\n                var player = buildingController.player(b);\n\n                return matrix.insert(\n                    createBuilding(\n                        buildingController.type(b) || buildingController.name(b), \n                        buildingController.position(b), \n                        (editor ? player : playerController.id(app.players.number(player))),\n                        index\n                    )\n                );\n            });\n\n            units = map.units.map(function (u) {\n\n                var player = unitController.player(u);\n\n                var unit = createUnit(\n                    unitController.type(u) || unitController.name(u),\n                    (editor ? player : playerController.id(app.players.number(player))),\n                    unitController.position(u)\n                );\n\n                if (map.saved || app.game.started()) {\n\n                    unitController.update(unit, u);\n                }\n\n                return matrix.insert(unit);\n            });\n        },\n\n        moveUnit: function (unit, target) {\n\n            console.log(unit);\n\n            var index = getIndex(unit, units);\n            var current = units[index];\n            var element = matrix.position(target);\n\n            if (current) {\n\n                matrix.remove(current);\n            \n            } else {\n\n                current = unit;\n            }\n\n            current = unitController.setPosition(target, current);\n\n            if (!element || !terrainController.isUnit(element)) {\n\n                matrix.insert(current);\n            }\n\n            units.splice(index, 1, current);\n            \n            refresh();\n\n            return current;\n        },\n\n        removeUnit: function (unit) {\n\n            console.log(\"-- removing --\");\n            console.log(unit);\n\n            var index = getIndex(unit, units);\n\n            if (!isNaN(index)) {\n\n                unit = units.splice(index, 1)[0];\n            }\n\n            if ((element = matrix.get(unit)) && terrainController.isUnit(element) && unitController.isSame(element, unit)) {\n\n                matrix.remove(unit);\n            }\n\n            refresh();\n\n            return unit;\n        },\n\n        attackUnit: function (unit, damage) {\n\n            var health = unitController.health(unit);\n\n            units[getIndex(unit, units)].takeDamage(health - damage);\n\n            matrix.get(unit).takeDamage(health - damage);\n        },\n\n        changeOwner: function (element, player) {\n\n            var element = matrix.get(element);\n\n            building = terrainController.isUnit(element) ? unitController.occupies(element) : element;\n\n            buildingController.setPlayer(player, building);\n            building.restore();\n\n            if (!buildingController.isBuilding(b)) {\n\n                throw new Error(\"Attempted capture on a non building mapEditor element\");\n            }\n\n            buildingController.setPlayer(player, building).restore(building);\n\n            refresh();\n        },\n\n        takeHQ: function (hq) {\n\n            var index = buildingController.indexOf(hq);\n\n            var building = createBuilding(\n                \"city\",\n                buildingController.position(hq),\n                buildingController.player(hq),\n                index\n            );\n\n            buildings.splice(index, 1, building);\n\n            Matrix.insert(building);\n        },\n\n        printMatrix:function () {\n\n            matrix.log();\n        },\n\n        clean: function () { \n\n            matrix.clean();\n\n            return this;\n        },\n\n        focus: function () {\n\n            if (app.key.keyUp(app.key.map()) && app.key.undoKeyUp(app.key.map())) {\n\n                app.hud.show();\n                app.coStatus.show();\n                app.cursor.show();\n                refresh();\n                focused = false;\n\n            } else if (app.key.pressed(app.key.map()) && app.key.undo(app.key.map()) && !focused) {\n\n                app.hud.hideCurrentElement();\n                app.coStatus.hideCurrentElement();\n                app.cursor.hideCurrentElement();\n                refresh(true);\n                focused = true;\n            }\n\n            refresh();\n        },\n\n        focused: function () { \n\n            return focused; \n        },\n\n        refresh: function () {\n\n            app.animate([\"unit\",\"building\"]);\n        },\n\n        build: function (element, p) {\n\n            var position = new Position(position.x, position.y);\n            var type = terrainController.type(element);\n            var existing = occupants(position);\n\n            return {\n                unit: buildUnit(element, position, existing),\n                building: buildBuilding(element, position, existing),\n                terrain: buildTerrain(element, position, type, existing)\n            }[type];\n        },\n\n        surplus: function () { \n\n            return { building: allowedBuildings, unit: allowedUnits }; \n        },\n\n        displaySurplus: function (){},\n        displayPlayers: function (){},\n\n        raw: function (player) {\n\n            return {\n\n                player: player,\n                name: map.name,\n                players: map.players,\n                category: map.category,\n                dimensions: map.dimensions,\n                terrain: app.map.terrain(),\n                buildings: app.map.buildings(),\n                units: app.map.units(),\n                background: background\n            };\n        },\n\n        unitsInfo: function () {\n\n            return units.map(function (unit) {\n\n                return {\n                    unit: unitController.name(unit),\n                    hp: unitController.health(unit),\n                    gas: unitController.fuel(unit),\n                    rounds: unitController.ammo(unit)\n                };\n            });\n        }\n    };\n}\n\nmodule.exports = mapController();"]}