{"version":3,"file":"unitController.js","sourceRoot":"","sources":["unitController.ts"],"names":[],"mappings":"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","sourcesContent":["/* ------------------------------------------------------------------------------------------------------*\\\n   \n    controller/unit.js controls the updating, modification and actions performed on unit objects\n   \n\\* ------------------------------------------------------------------------------------------------------*/\n\nValidator = require(\"../tools/validator.js\");\ntransmit = require(\"../sockets/transmitter.js\");\ncomposer = require(\"../tools/composition.js\");\ncreateDefaults = require(\"../definitions/defaults.js\");\nbuildingController = require(\"../controller/building.js\");\nterrainDefaults = require(\"../definitions/properties.js\");\nbuildingDefaults = require(\"../definitions/buildings.js\");\nunitDefaults = require(\"../definitions/units.js\");\nplayerController = require(\"../controller/players.js\");\ncurry = require(\"../tools/curry.js\");\n\nmodule.exports = function () {\n\n    var validate = new Validator(\"controller/unit.js\");\n    var defaults = createDefaults(unitDefaults, buildingDefaults, terrainDefaults);\n\n    var controller = composer.including([\n\n            \"player\",\n            \"getPlayer\",\n            \"owns\",\n            \"on\", \n            \"color\", \n            \"health\", \n            \"position\", \n            \"type\", \n            \"name\", \n            \"defense\", \n            \"co\", \n            \"isUnit\"\n\n        ]).compose({\n\n        /*\n            returns the id of a unit object\n\n            @unit = Object, unit\n        */\n\n        id: function (unit) {\n\n            return unit.id;\n        },\n\n        /*\n            returns a boolean as to whether a unit object is loaded or not\n\n            @unit = Object, unit\n        */\n\n        isLoaded: function (unit) { \n\n            var loaded = unit.loaded;\n\n            return loaded && loaded.length; \n        },\n\n        /*\n            returns the loaded elements of the passed in unit\n\n            @unit = Object, unit\n        */\n\n        loaded: function (unit) { \n\n            return unit.loaded;\n\n            // return loaded && loaded.length ? loaded : false; \n        },\n\n        /*\n            returns a boolean as to whether the passed in unit object is a ranged unit\n\n            @unit = Object, unit\n        */\n\n        ranged: function (unit) { \n\n            return defaults.range(unit).high > 1;\n        },\n\n        /*\n            modifies a passed in unit (unit) by marking it as selected, then returns it\n\n            @unit = Object, unit\n        */\n\n        select: function (unit) {\n\n            unit.selectable = false;\n\n            return unit;\n        },\n\n        ammo: function (unit) { \n\n            return unit.ammo; \n        },\n\n        fuel: function (unit) { \n\n            return unit.fuel; \n        },\n\n        movement: function (unit) { \n\n            return unit.movement; \n        },\n\n        vision: function (unit) { \n\n            return unit.vision; \n        },\n\n        refuel: function (unit) { \n\n            unit.fuel = defaults.fuel(unit);\n\n            return unit;\n        },\n\n        reload: function (unit) { \n\n            unit.ammo = defaults.ammo(unit);\n\n            return unit;\n        },\n\n        recover: function (unit) {\n\n            unit.movement = defaults.movement(unit);\n            unit.selectable = true;\n            unit.attacked = false;\n            unit.captured = false;\n            unit.actions = {};\n            unit.targets = [];\n            unit.damage = [];\n            unit.moved = 0;\n\n            return unit;\n        },\n\n        needsRepair: function (unit) {\n\n            var repairing, l = 3;\n            var repair = ['health', 'fuel', 'ammo'];\n\n            while (l--) {\n\n                repairing = repair[l];\n\n                if (unit[repairing] < defaults[repairing](unit)) {\n\n                    return true;\n                }\n            }\n\n            return false;\n        },\n\n        repair: function (unit) {\n\n            // address players getting in this function\n            var player = this.getPlayer(unit);\n            var cost = defaults.cost(unit) / 10;\n\n            if (this.needsRepair(unit) && playerController.canPurchase(player, cost)) {\n\n                playerController.purchase(player, cost);\n\n                return composer.functions([\n                    this.heal(false),\n                    this.reload,\n                    this.refuel\n                ], Object.assign(unit));\n            }\n\n            return unit;\n        },\n\n        previous: function (unit) {\n\n            var moves = unit.moves;\n\n            return moves[moves.length - 1]; \n        },\n\n        attack: function (attacker, attacked, damage) {\n\n            attacker.attacked = true;\n            attacker.selectable = false;\n\n            return this.damage(attacked, damage);\n        },\n\n        attacked: function (unit) { \n\n            return unit.attacked; \n        },\n\n        resetTargets: function (unit) {\n\n            unit.targets = [];\n\n            return unit;\n        },\n\n        action: function (unit) { \n\n            return unit.action; \n        },\n\n        getActions: function (unit) {\n\n            var actions = unit.actions;\n\n            return actions;\n        },\n\n        selectable: function (unit) { \n\n            return unit.selectable; \n        },\n\n        occupies: function (unit) { // maybe change this\n\n            var square = app.map.occupantsOf(this.position(unit));\n\n            return square.building || square.terrain;\n        },\n\n        moveBack: function (unit) { \n\n            var moved = unit.moved;\n\n            if (moved) {\n\n                this.move(this.previous(unit), -moved, unit); \n            }\n        },\n\n        canTransport: function (unit2, unit1) { \n\n            var loadable = this.canLoad(unit2);\n            var type = this.name(unit1).toLowerCase();\n\n            return loadable && loadable.indexOf(type) >= 0;\n        },\n\n        canLoad: function (unit) {\n\n            return defaults.load(unit);\n        },\n\n        showAttackRange: function (unit) {\n                \n            if (this.ranged(unit)) {\n\n                app.path.set(this.attackRange(unit));\n            \n            } else {\n\n                var range = app.path.reachable(unit, defaults.movement(unit));\n                var visited = app.path.visited();\n                var neighbor, neighbors, length = range.length;\n\n                for (var j, i = 0; i < length; i += 1) {\n\n                    neighbors = app.map.getNeighbors(this.position(range[i]));\n\n                    for (j = 0; j < neighbors.length; j += 1) {\n\n                        neighbor = neighbors[j];\n\n                        if (!visited.element(neighbor)) {\n\n                            visited.close(neighbor);\n                            range.push(neighbor);\n                        }\n                    }\n                }\n\n                app.path.clean();\n                app.attackRange.set(range);\n            }\n\n            return unit;\n        },\n\n        attackRange: function (unit) {\n\n            var array = [];\n\n            var range = defaults.range(unit);\n\n            var high = this.range(range.high, unit);\n\n            var low = this.range(range.low - 1, unit);\n\n            var push, l, h = high.length;\n\n            while (h--) {\n\n                push = true;\n                \n                l = low.length;\n\n                while (l--) {\n\n                    if (this.on(this.position(low[l]), high[h])) {\n\n                        push = false;\n                    }\n                }\n\n                if (push) {\n\n                    array.push(high[h]);\n                }\n            }\n\n            return array;\n        }\n\n        // turn: function () { <-- take out of unit object\n        //    \n        //     return app.players.current().owns(this); \n        // }\n\n        // showHealth: function () { return Math.ceil(health / 10)}, <-- take out of object \n\n    }, buildingController, playerController);\n\n\n    /*--------------------------------------------------------------------------------------*\\\n    \\\\ all functions below are curried functions, they are declared seperately so that they //\n    // can maintain the context of \"this\"                                                   \\\\\n    \\*--------------------------------------------------------------------------------------*/\n\n    /*\n        finds and returns either the index of a passed in unit (loaded), or negative 1 if it is not found, \n        in the loaded array of a passed in unit (unit)\n\n        @unit = Object, unit\n        @loaded = Object, unit\n    */\n\n    controller.indexOfLoaded = curry(function (loaded, unit) {\n\n        if (isNaN(loaded.id)) {\n\n            throw new Error(\"Invalid unit id found in second argument of \\\"indexOfLoaded\\\".\");\n        }\n\n        if (!unit.loaded) {\n\n            throw new Error(\"Loaded property missing from unit in the first argument of \\\"indexOfLoaded\\\".\");\n        }\n\n        var loaded = unit.loaded;\n\n        var l = loaded.length;\n\n        while (l--) {\n\n            if (loaded[l].id === loaded.id) {\n\n                return l;\n            }\n        }\n\n        return -1;\n    \n    }.bind(controller));\n\n    /*\n        returns a boolean as to whether a unit object is within a specified range or not\n\n        @unit = Object, unit\n        @range = Array, [{x:Integer, y:integer}]\n    */\n\n    controller.inRange = curry(function (range, unit) {\n\n        var l = range.length;\n\n        while (l--) {\n\n            if (this.on(range[l], unit)) {\n                \n                return true;\n            }\n        }\n\n        return false;\n    \n    }.bind(controller));\n\n    /*\n        returns a an array of attackable units in a specified range (range), \n        from a specified position (position), \n        by a specified unit (unit)\n\n        @unit = Object, unit\n        @position = Object, {x:Integer, y:Integer}\n        @range = Array, [position]\n    */\n\n    controller.attackable = curry(function (position, range, unit) { // changed so that it always returns an array, will have to check for length\n\n        // get list of units\n        var array = [];\n        var l = range.length;\n\n        while (l--) {\n\n            element = range[l];\n\n            if (this.type(element) === 'unit' && !this.owns(unit, element) && this.canAttack(unit, element)) {\n\n                array.push(element);\n            }\n        }\n\n        // if their are any units in the attackable array, then return it, otherwise return false\n        return array;\n    \n    }.bind(controller));\n\n    /*\n        modifies a passed in unit (unit) by adding a passed in unit (passanger) to it's loaded array, then returns it\n\n        @unit = Object, unit\n        @passenger = Object, unit\n    */\n\n    controller.load = curry(function (unit, passanger) {\n\n        if (isNaN(unit.id)) {\n\n            throw new Error(\"Invalid unit id found in first argument of \\\"load\\\".\", \"controller/unit.js\");\n        }\n\n        if (isNaN(passanger.id)) {\n\n            throw new Error(\"Invalid unit id found in second argument of \\\"load\\\".\", \"controller/unit.js\");\n        }\n\n        app.map.removeUnit(passanger);\n\n        unit.loaded.push(passanger);\n\n        if (app.user.turn()) { // <--- check out\n\n            transmit.load(unit.id, passanger.id);\n\n            this.select(unit);\n        }\n\n        console.log(unit);\n\n        return unit;\n    \n    }.bind(controller));\n\n    /*\n        modifies a passed in unit (unit) by removing an element at the passed in index from its loaded array, \n        then returns the removed element\n\n        @unit = Object, unit\n        @index = Integer\n    */\n\n    controller.unload = curry(function (index, unit) {\n\n        if (isNaN(index)) {\n\n            throw new Error(\"First argument \\\"index\\\" of \\\"unload\\\" must be an integer\", \"controller/unit.js\");\n        }\n\n        if (!unit.loaded) {\n\n            throw new Error(\"Loaded property missing from unit in the second argument of \\\"unload\\\".\", \"controller/unit.js\");\n        }\n\n        if (!unit.loaded[index]) {\n\n            throw new Error(\"Index supplied to \\\"unload\\\" is undefined in the loaded property.\", \"controller/unit.js\");\n        }\n\n        return unit.loaded.splice(index, 1)[0];\n    \n    }.bind(controller));\n\n    /*\n        removes a unit from a passed in unit's (unit) loaded array at the passed in index (unloading), \n        then modifies the removed unit, setting its position to the passed in position (target) and returns it\n\n        @unit = Object, unit\n        @unloading = Integer\n        @target = Object, {x:Integer, y:Integer}\n    */\n\n    controller.drop = curry(function (unloading, target, unit) { \n\n        if (isNaN(unloading)) {\n\n            throw new Error(\"Second argument \\\"unloading\\\" of \\\"drop\\\" must be an integer.\", \"controller/unit.js\");\n        }\n\n        if (!unit.loaded) {\n\n            throw new Error(\"Loaded property missing from unit in the first argument of \\\"drop\\\".\", \"controller/unit.js\");\n        }\n\n        if (validate.isCoordinate(target)) {\n\n            throw new Error(\"Invalid target position supplied as third argument of \\\"drop\\\".\", \"controller/unit.js\");\n        }\n\n        //  var index = isNaN(unloading) ? unit.loaded.indexOf(unloading) : unloading; // <-- extract logic\n\n        var passanger = this.unload(unit, index);\n\n        this.setPosition(passanger, new Position(target.x, target.y));\n\n        this.select(passanger);\n\n        // app.mapEditor.addUnit(unit); <-- take out of unit\n\n        if (app.user.turn()) {\n\n            transmit.unload(unit.id, target, index);\n\n            this.select(unit);\n\n            // figure this out.. (function defined doesnt belong in unit object)\n            // this.deselect();\n        }\n\n        return passanger;\n    \n    }.bind(controller));\n\n    /*\n        returns a new unit with the combined health, ammo, and fuel of two passed in unit objects (unit1 and unit2)\n\n        @unit = Object, unit\n        @passenger = Object, unit\n    */\n\n    controller.join = curry(function (unit2, unit1) {\n\n        if (this.type(unit1) !== this.type(unit2)) {\n\n            throw new Error(\"Units must be of the same type to be joined.\", \"controller/unit.js\");\n        }\n\n        // copy unit2\n        var unit = Object.assign(unit2);\n        var min = Math.min;\n\n        // emit units to be combined to other players games for syncronization\n        if (app.user.turn()) {\n\n            transmit.join(unit1, unit2);\n        }\n\n        unit.health = min(unit1.health + unit2.health, defaults.health(unit1));\n        unit.ammo = min(unit1.ammo + unit2.ammo, defaults.ammo(unit1));\n        unit.fuel = min(unit1.fuel + unit2.fuel, defaults.fuel(unit1));\n\n        // remove selected unit\n        // app.mapEditor.removeUnit(this.raw()); <-- take out of unit object\n\n        // FIGURE IT OUT!! <--- change method location\n        // this.deselect();\n\n        return unit;\n    \n    }.bind(controller));\n\n    controller.damage = curry(function (damage, unit) { \n\n        unit.health -= damage;\n\n        return unit;\n    \n    }.bind(controller));\n\n    controller.moved = curry(function (position, path, unit) {\n\n        if (isNaN(path.length)) {\n\n            throw new Error(\"Second argument of \\\"moved\\\" must be an array.\", \"controller/unit.js\");\n        }\n\n        var moved = 0, len = path.length;\n\n        for (var i = 1; i < len; i += 1) {\n\n            moved += this.moveCost(path[i], unit);\n\n            if (this.on(position, path[i])) {\n\n                return moved;\n            }\n        }\n\n        return moved;\n    \n    }.bind(controller));\n\n    controller.move = curry(function (target, moved, unit) { // try to make functional\n\n        if (!isArray(unit.moves)) {\n\n            throw new Error(\"The \\\"moves\\\" property in argument \\\"unit\\\" of \\\"move\\\" must be an array.\", \"controller/unit.js\");\n        }\n\n        if (isNaN(unit.movement)) {\n\n            throw new Error(\"Unit in argument \\\"unit\\\" of \\\"move\\\" has an Invalid \\\"movement\\\" property, \\\"movement\\\" must be represented as an integer.\", \"controller/unit.js\");\n        }\n\n        if (isNaN(unit.fuel)) {\n\n            throw new Error(\"Unit in argument \\\"unit\\\" of \\\"move\\\" has an Invalid \\\"fuel\\\" property, \\\"fuel\\\" must be represented as an integer.\", \"controller/unit.js\");\n        }\n\n        if (isNaN(unit.id)) {\n\n            throw new Error(\"Invalid unit id found in argument \\\"unit\\\" of \\\"move\\\".\", \"controller/unit.js\");\n        }\n\n        var position = this.position(unit);\n        \n        unit = composer.functions([\n\n            this.setMovement(this.movement(unit) - moved),\n            this.setFuel(this.fuel(unit) - moved),\n            this.setMoved(moved),\n            this.resetTargets\n\n        ], unit);\n\n        // change selected units position to the specified location\n        unit = app.map.moveUnit(unit, new Position(target.x, target.y));\n\n        // track how much fuel has been used\n        this.getPlayer(unit).score.fuel(moved);\n\n        // save move\n        if (moved < 0) {\n\n            this.removeMove(unit);\n\n        } else if (moved > 0) {\n\n            this.addMove(position, unit);\n        }\n\n        return unit;\n    \n    }.bind(controller));\n\n    controller.setAction = curry(function (action, unit) { \n\n        unit.action = action; \n\n        return unit;\n    \n    }.bind(controller));\n\n    controller.setActions = curry(function (actions, unit) {\n\n        unit.actions = actions;\n\n        return unit;\n    \n    }.bind(controller));\n\n    controller.getTargets = curry(function (targets, neighbors, index, unit) {\n\n        if (this.isLoaded(unit)) {\n\n            var neighbor, l = neighbors.length;\n\n            while (l--) {\n                \n                neighbor = neighbors[l];\n\n                if (this.isUnit(neighbor) || this.canLoad(unit)) {\n\n                    targets.push(neighbor);\n                }\n            }\n        }\n\n        return isNaN(index) ? targets : targets[index];\n    \n    }.bind(controller));\n\n    controller.setMovement = curry(function (movement, unit) {\n\n        unit.movement = movement;\n\n        return unit;\n    \n    }.bind(controller));\n\n    controller.setFuel = curry(function (fuel, unit){\n\n        unit.fuel = fuel;\n\n        return unit;\n\n    }.bind(controller));\n\n    controller.setMoved = curry(function (moved, unit){\n\n        unit.moved = moved;\n\n        return unit;\n\n    }.bind(controller));\n\n    controller.setTargets = curry(function (targets, unit) {\n\n        unit.targets = targets;\n\n        return unit;\n    \n    }.bind(controller));\n\n    controller.addMove = curry(function (move, unit) {\n\n        if (!isArray(unit.moves)) {\n\n            throw new Error(\"\\\"moves\\\" property on argument \\\"unit\\\" in \\\"addMove\\\" must be an array.\", \"controller/unit.js\");\n        }\n\n        unit.moves.push(new Position(move.x, move.y));\n\n        return unit;\n    });\n\n    controller.removeMove = curry(function (move, unit) {\n\n        if (!isArray(unit.moves)) {\n\n            throw new Error(\"\\\"moves\\\" property on argument \\\"unit\\\" in \\\"removeMove\\\" must be an array.\", \"controller/unit.js\");\n        }\n\n        unit.moves.pop();\n\n        return unit;\n    }); \n\n    controller.targets = curry(function (neighbors, index, unit) { \n\n        return this.getTargets(targets, neighbors, index, unit);\n    \n    }.bind(controller));\n\n    controller.target = curry(function (index, unit) { \n\n        if (isNaN(index)) {\n\n            throw new Error(\"Invalid index supplied in second argument of \\\"target\\\".\", \"controller/unit.js\");\n        }\n\n        if (!unit.damage) {\n\n            throw new Error(\"Damage parameter is missing from unit in first argument of \\\"target\\\".\", \"controller/unit.js\");\n        }\n\n        if (!unit.damage[index]) {\n\n            throw new Error(\"Damage calculation is undefined at index from unit supplied as first argument of \\\"target\\\".\", \"controller/unit.js\");\n        }\n\n        // edit this maybe... use try catch\n\n        return unit.damage[index] !== undefined ? unit.damage[index]: \n            (unit.damage[index] = app.calculate.damage(app.map.getNeighbors(this.position(unit)), unit));\n    \n    }.bind(controller));\n\n    controller.heal = curry(function (health, unit) { \n\n        unit.health = Math.min(unit.health + (health || 1), defaults.health(unit)); \n\n        return unit;\n    \n    }.bind(controller));\n\n    controller.setTargets = curry(function (targets, unit) {\n\n        unit.targets = targets;\n\n        return unit;\n    \n    }.bind(controller));\n\n    controller.movementCost = curry(function (obsticle, unit) {\n\n        return defaults.movementCosts(unit)[obsticle]; \n    \n    }.bind(controller));\n\n    controller.canAttack = curry(function (attacked, attacker) { \n\n        return !this.canLoad(attacker) && defaults.canAttack(attacker)\n            .indexOf(defaults.transportaion(attacked)) >= 0;\n    \n    }.bind(controller));\n\n    controller.canCapture = curry(function (building, unit) {\n\n        // if the selected unit can capture buildings then continue\n        return defaults.capture(unit) \n            && buildingController.isBuilding(building) \n            && !this.owns(building, unit) \n            && this.on(building, unit);\n\n    }.bind(controller));\n\n    controller.canBuildOn = curry(function (location, unit) { \n\n        return this.movementCost(location, unit) < defaults.movement(unit); \n    \n    }.bind(controller));\n\n    controller.moveCost = curry(function (obsticle, unit) {\n\n        if (this.isUnit(obsticle)) {\n\n            if (this.owns(obsticle, unit)) {\n\n                obsticle = this.occupies(obsticle);\n\n            } else {\n\n                return this.movement(unit);\n            }\n        }\n\n        return defaults.movementCost(unit, obsticle);\n    \n    }.bind(controller));\n\n    controller.canCombine = curry(function (unit2, unit1) {\n\n        // check if the unit being landed on belongs to the current players and is not the same unit\n        return unit1 && unit2 && this.isUnit(unit1) && this.isUnit(unit2) && !this.isSame(unit1, unit2) \n\n            // check if is the same unit type and can be joined\n            && ((this.name(unit1) === this.name(unit2) && this.health(unit1) < defaults.health(unit1) \n\n            // check if is a valid transport and capable of transporting\n            || this.canTransport(unit2, unit1) && this.loaded(unit2).length < defaults.maxLoad(unit2)));\n    \n    }.bind(controller));\n    \n    controller.actions = curry(function (target, unit) {\n\n        var exists = false;\n\n        var attackable = this.attackable(\n            terrainController.position(target), \n            this.attackRange(unit), \n            unit\n        );\n\n        var actions = {\n\n            attack: attackable.length > 0 ? attackable : false,\n            capture: this.canCapture(target, unit),\n            drop: this.loaded(unit) || false\n        };\n\n        var player = this.getPlayer(unit); // maybe extract this.\n\n        if (this.isUnit(target) && playerController.isTurn(player) && this.canCombine(target, unit)) {\n\n            exists = true;\n           \n            if (this.name(target) === this.name(unit)) {\n\n                actions.join = target;\n\n            } else {\n\n                actions.load = target;\n            }\n        }\n\n        actions.wait = !actions.load;\n\n        return actions.attack \n            || actions.capture \n            || actions.drop \n            || actions.wait \n            || exists ? \n            actions : false;\n    \n    }.bind(controller));\n\n    controller.range = curry(function (allowed, unit) {\n\n        var allowed = allowed || this.movement(unit);\n        var position = this.position(unit);\n        var dimensions = app.map.dimensions();\n        var range = (allowed * 2);\n        var right = position.x + allowed;\n        var left = position.x - allowed;\n        var array = [], abs = Math.abs;\n\n        // get the diamond pattern of squares\n        for (var i, y, t, b, x = left, inc = 0; x <= right, inc <= range; x += 1, inc += 1) {\n\n            i = inc > allowed ? range - inc : inc;\n            t = (t = position.y - i) > 0 ? t : 0; // top\n            b = (b = position.y + i) < dimensions.y ? b : dimensions.y - 1; // bottom\n\n            // add all reachable squares to array\n            if (x >= 0 && x <= dimensions.x) {\n\n                for (y = t; y <= b; y += 1) {\n\n                    array.push(app.map.top(new Position(x, y))); // <-- maybe seperate concerns\n                }\n            }\n        }\n\n        return array;\n    \n    }.bind(controller));\n\n    controller.movementRange = curry(function (distance, unit) {\n\n        var range = [];\n        var reachable = app.path.reachable(unit);\n        var l = reachable.length;\n\n        while (l--) {\n\n            if (this.on(this.position(reachable[l]), unit)) {\n\n                range.unshift(reachable[l]);\n\n            } else if (!this.isUnit(reachable[l]) || this.owns(unit, reachable[l])) {\n\n                range.push(reachable[l]);\n            }\n        }\n\n        app.path.clean();\n\n        return range;\n    \n    }.bind(controller));\n\n    controller.inAttackRange = curry(function (unit2, unit1) { \n\n        return this.inRange(unit2, this.attackRange(unit1)); \n    \n    }.bind(controller));\n\n    controller.inMovementRange = curry(function (unit2, unit1) { \n\n        return this.inRange(unit2, this.movementRange(false, unit1));\n    \n    }.bind(controller));\n\n    controller.isSame = curry(function (unit1, unit2) {\n\n        return this.id(unit1) === this.id(unit2);\n    \n    }.bind(controller));\n\n    /*\n        modifies the passed in unit, setting its position then returning it\n\n        @unit = Object, unit\n        @position = Object, {x:Integer, y:Integer}\n    */\n\n    controller.setPosition = curry(function (position, unit) {\n\n        var error = validate.isCoordinate(position);\n\n        if (error) {\n\n            throw error;\n        }\n\n        unit.position = new Position(position.x, position.y); \n\n        return unit;\n\n    }.bind(controller));\n\n    return controller;\n}();"]}