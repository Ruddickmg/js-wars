{"version":3,"file":"building.js","sourceRoot":"","sources":["building.ts"],"names":[],"mappings":";;AAAA,yDAAyE;AACzE,sDAAwE;AAcxE,mBAAyB,IAAI,EAAE,QAAQ,EAAE,MAAM,EAAE,KAAK;IAErD,MACO,yBAAyB,GAAa,kBAAQ,EAAE,EAChD,UAAU,GAAY,oBAAa,CAAC,IAAI,EAAE,QAAQ,CAAC,EACnD,kBAAkB,GAAG;QAEjB,IAAI,EAAE,UAAU;QAChB,MAAM,EAAE,MAAM;QACd,MAAM,EAAE,EAAE;QACV,IAAI,EAAE,IAAI;QACV,KAAK,EAAE,KAAK;KACf,CAAC;IAET,MAAM,CAAW,yBAAyB,CAAC,SAAS,CAAC,MAAM,EAAE,MAAM,EAAE,aAAa,CAAC;SAC3E,OAAO,CAAC,kBAAkB,EAAE,UAAU,CAAC,CAAC;AACjD,CAAC;AAhBD,4BAgBC;AAAA,CAAC","sourcesContent":["import {default as composer, Composer} from \"../../../../tools/composer\";\nimport {default as createTerrain, Terrain} from \"../terrain/terrain.js\";\nimport {Player} from \"../../../../users/players/player\";\n\nexport interface Building {\n\n    type: string,\n    player: Player,\n    health: number,\n    name: string,\n    index?: number,\n    draw: string,\n    position: Position\n}\n\nexport default function (type, position, player, index): Building {\n    \n\tconst\n        selectivelyCombineObjects: Composer = composer(),\n        baseObject: Terrain = createTerrain(type, position),\n        buildingProperties = {\n\n            type: \"building\",\n            player: player,\n            health: 20,\n            name: type,\n            index: index,\n        };\n\n\treturn <Building>selectivelyCombineObjects.excluding(\"type\", \"name\", \"orientation\")\n        .combine(buildingProperties, baseObject);\n};"]}