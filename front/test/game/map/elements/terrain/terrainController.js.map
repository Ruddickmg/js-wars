{"version":3,"file":"terrainController.js","sourceRoot":"","sources":["terrainController.ts"],"names":[],"mappings":"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","sourcesContent":["import {default as createPosition, Position} from \"../position\";\nimport {MapElement} from \"../defaults\";\n\nexport default function(map: Map) {\n\n\tconst\n\t\trestricted = {\n\n\t\t\tsea: [\"sea\", \"reef\", \"shoal\"],\n\t\t\treef: this.sea,\n\t\t\tshoal: this.sea,\n\t\t\troad:[\"road\"],\n\t\t\tpipe:[\"pipe\"],\n\t\t\tbridge: [\"bridge\"],\n\t\t\triver:[\"river\"]\n\t\t};\n\n    return {\n\n        position: ({x, y}: Position): Position => createPosition(x, y),\n        type: ({type}:MapElement): string => type,\n        name: ({name}:MapElement): string => name.toLowerCase(),\n        draw: ({name, draw, orientation}): string => (draw || name) + orientation,\n        restrictions:(type: string): string[] => restricted[type].slice(),\n        isPlain:(element: MapElement): boolean => this.name(element) === \"plain\",\n        isTerrain: (element: MapElement): boolean => this.type(element) === \"terrain\",\n        isBuilding: (element: MapElement): boolean => this.type(element) === \"building\",\n        isUnit: (element: MapElement): boolean => this.type(element) === \"unit\",\n        isShoal:(element: MapElement): boolean => this.name(element) === \"shoal\",\n        isReef:(element: MapElement): boolean => this.name(element) === \"reef\",\n        isRiver:(element: MapElement): boolean => this.name(element) === \"river\",\n        isSea(element: MapElement): boolean {\n\n            const nameOfElement = this.name(element);\n\n            return restricted.sea.indexOf(nameOfElement) > -1;\n        },\n        occupied(element: MapElement): boolean {\n\n            const\n                position = this.position(element),\n                occupantOfPosition = map.top(position),\n                typeOfOccupant = this.type(occupantOfPosition);\n\n            return typeOfOccupant === \"unit\";\n        },\n        isBeach(element: MapElement): boolean {\n\n            const\n                isSea = this.isSea,\n                neighbors = this.position(element)\n                .neighbors();\n\n            if (isSea(element)) {\n\n                return neighbors.reduce((isBeach, neighbor) => {\n\n                    return !isSea(neighbor) || isBeach;\n\n                }, false);\n            }\n\n            return false;\n        },\n        setOrientation(orientation: string, element: MapElement): MapElement {\n\n            const modifiedElement = Object.assign({}, element);\n\n            modifiedElement.orientaion = orientation;\n\n            return modifiedElement;\n        },\n        setDrawing(drawing: string, element: MapElement): MapElement {\n\n            const modifiedElement = Object.assign({}, element);\n\n            modifiedElement.draw = drawing;\n\n            return modifiedElement;\n        },\n        setIndex(index: number, element: MapElement): MapElement {\n\n            const modifiedElement = Object.assign(element);\n\n            modifiedElement.index = index;\n\n            return modifiedElement;\n        },\n        onSameSpace({x, y}: Position, element: MapElement): boolean {\n\n            const position = this.position(element);\n\n            return position.x === x && position.y === y;\n        }\n    };\n}"]}