{"version":3,"file":"server.js","sourceRoot":"","sources":["server.ts"],"names":[],"mappings":"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","sourcesContent":["import bodyParser from \"body-parser\";\nimport cron from \"cron\";\nimport express from \"express\";\nimport http from \"http\";\nimport socketIO from \"socket.io\";\nimport {ClientHandler, default as clientHandler} from \"./src/clients/clients\";\nimport {Connections, default as connections} from \"./src/connections/connections\";\nimport initializeRoutes from \"./src/connections/routes\";\nimport {default as createSocketListener, SocketListeners} from \"./src/connections/sockets/listener\";\nimport gamePlaySocketListener from \"./src/game/gamePlaySocketListener\";\nimport gameSetupSocketListener from \"./src/game/gameSetupSocketListener\";\nimport {default as roomsController, Rooms} from \"./src/rooms/rooms\";\nimport roomsSocketListener from \"./src/rooms/roomsSocketListener\";\nimport {default as time, Time} from \"./src/tools/calculations/time\";\nimport compiler from \"./src/tools/compiler\";\nimport {AiController, default as aiController} from \"./src/users/ai/aiController\";\nimport aiSocketListener from \"./src/users/ai/aiSocketListener\";\n\nconst app: any = express();\nconst server: any = http.createServer(app);\nconst cronJob: any = cron.CronJob;\nconst connection: Connections = connections(process.env);\nconst periodOfTime: Time = time();\nconst defaultDirectory: string = \"var/www\";\nconst pathToRootDirectory: string = __dirname || defaultDirectory;\nconst staticFileDirectory: any = express.static(`${pathToRootDirectory}/public`);\nconst {ip, port, url} = connection.frontend();\nconst clients: ClientHandler = clientHandler();\nconst aiPlayers: AiController = aiController();\nconst rooms: Rooms = roomsController(url);\nconst socketListener: SocketListeners = createSocketListener();\nconst minutesToRememberDisconnectedSocket: number = 15;\nconst timeBetweenChecksOnSocketPool: string = \"0 */20 * * * *\";\nconst io = socketIO(server);\nconst handleDisconnectedSocketConnections = new cronJob({\n\n    cronTime: timeBetweenChecksOnSocketPool,\n    timeZone: \"America/Los_Angeles\",\n    onTick() {\n        clients.removeTimedOutDisconnections(periodOfTime.minutes(minutesToRememberDisconnectedSocket))\n    },\n});\nconst pathFromRoot = (relativePath: string): string => `${pathToRootDirectory}${relativePath}`;\nconst esCompatibilityLevel: string = \"env\";\nconst relativePathToMain: string = \"/public/js\";\nconst relativePathToNode: string = \"/node\";\nconst nameForInputFile: string = \"main.js\";\nconst nameForOutputFile: string = \"index.js\";\nconst pathToNode: string = pathFromRoot(relativePathToNode);\nconst pathToMain: string = pathFromRoot(relativePathToMain);\nconst pathToInputFile = `${pathToNode}/${nameForInputFile}`;\nconst pathToOutputFile = `${pathToMain}/${nameForOutputFile}`;\n\ncompiler(pathToInputFile)\n    .tsify({target: \"ES6\"})\n    .babelify({\n        extensions: [\".js\", \".ts\"],\n        plugins: [],\n        presets: [esCompatibilityLevel],\n    }).compile(pathToOutputFile);\n\napp.use(staticFileDirectory);\napp.use(bodyParser.json());\n\nsocketListener.addListeners(\n    roomsSocketListener(clients, rooms, aiPlayers),\n    aiSocketListener(clients, aiPlayers),\n    gameSetupSocketListener(clients, rooms),\n    gamePlaySocketListener(clients, aiPlayers),\n);\n\nio.on(\"connection\", socketListener.listenForSocketCommunication);\n\nhandleDisconnectedSocketConnections.start();\n\ninitializeRoutes(app, rooms, clients, pathToRootDirectory);\n\nserver.listen(port, ip, () => console.log(`  - listening for requests @ ${ip}:${port}`));\n"]}