{"version":3,"file":"drawingTool.js","sourceRoot":"","sources":["drawingTool.ts"],"names":[],"mappings":";;AAAA,yCAAqE;AACrE,mDAA+C;AAa/C,mBAAyB,YAAiB,EAAE,OAAY,EAAE,EAAC,KAAK,EAAE,MAAM,EAAa,EAAE,IAAY,EAAE,8BAAoC,CAAC;IAEtI,MACI,KAAK,GAAG,EAAE,EACV,cAAc,GAAQ,uBAAgB,CAAC,KAAK,EAAE,MAAM,CAAC,EACrD,WAAW,GAAG,kBAAiB,CAAC,KAAK,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;IAEzD,MAAM,CAAC;QAEH,IAAI,EAAC,MAAY,cAAc,CAAC,kBAAkB,EAAE;QACpD,GAAG,EAAC,CAAC,IAAY,KAAU,KAAK,CAAC,IAAI,CAAC;QACtC,QAAQ,EAAC,CAAC,IAAY,KAAc,KAAK,CAAC,IAAI,CAAC,KAAK,SAAS;QAC7D,IAAI,CAAC,IAAY,EAAE,SAAY,YAAY;YAEvC,MACI,CAAC,GAAY,KAAK,GAAG,2BAA2B,EAAE,2EAA2E;YAC7H,CAAC,GAAW,MAAM,GAAG,2BAA2B,EAChD,OAAO,GAAQ,MAAM,CAAC,UAAU,CAAC,OAAO,CAAC,EACzC,IAAI,GAAgB,WAAW,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAE1C,cAAc,CAAC,IAAI,CAAC,CAAC,OAAO,EAAE,IAAI,CAAC,CAAC;YAEpC,MAAM,CAAC,OAAO,CAAC;QACnB,CAAC;QACD,YAAY;YAER,MAAM,gBAAgB,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;YAE1D,gBAAgB,CAAC,KAAK,GAAG,KAAK,GAAG,2BAA2B,CAAC;YAC7D,gBAAgB,CAAC,MAAM,GAAG,MAAM,GAAG,2BAA2B,CAAC;YAE/D,MAAM,CAAC,gBAAgB,CAAC;QAC5B,CAAC;QACD,KAAK,CAAC,IAAY,EAAE,MAAW;YAE3B,KAAK,CAAC,IAAI,CAAC,GAAG,MAAM,CAAC;YAErB,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;KACJ,CAAA;AACL,CAAC;AAxCD,4BAwCC","sourcesContent":["import {default as createDrawingTool, DrawingTool} from \"./lineTool\";\nimport canvasAnimations from \"./animations.js\";\nimport {Dimensions} from \"./dimensions\";\n\nexport interface DrawingCache {\n\n    hide(): void\n    get(name: string): any\n    isCached(name: string): boolean\n    draw(name): any\n    createCanvas(): any\n    cache(name: string, canvas: any): DrawingCache\n}\n\nexport default function (screenCanvas: any, context: any, {width, height}: Dimensions, base: number, offsetNeededToCenterDrawing: number=0): DrawingCache {\n\n    const\n        cache = {},\n        animateDrawing: any = canvasAnimations(width, height),\n        drawingTool = createDrawingTool(width, height, base);\n\n    return {\n\n        hide:(): void => animateDrawing.hideCurrentElement(),\n        get:(name: string): any => cache[name],\n        isCached:(name: string): boolean => cache[name] !== undefined,\n        draw(name: string, canvas: any=screenCanvas): any {\n\n            const\n                x: number  = width / offsetNeededToCenterDrawing, // may not work for normal canvas drawings <-- check here first if problems\n                y: number = height / offsetNeededToCenterDrawing,\n                drawing: any = canvas.getContext(context),\n                line: DrawingTool = drawingTool(x, y);\n\n            animateDrawing[name](drawing, line);\n\n            return drawing;\n        },\n        createCanvas(): any {\n\n            const gridSquareCanvas = document.createElement('canvas');\n\n            gridSquareCanvas.width = width * offsetNeededToCenterDrawing;\n            gridSquareCanvas.height = height * offsetNeededToCenterDrawing;\n\n            return gridSquareCanvas;\n        },\n        cache(name: string, canvas: any): DrawingCache {\n\n            cache[name] = canvas;\n\n            return this;\n        }\n    }\n}"]}