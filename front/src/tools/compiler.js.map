{"version":3,"file":"compiler.js","sourceRoot":"","sources":["compiler.ts"],"names":[],"mappings":";;AAAA,uCAAgC;AAChC,2CAAoC;AACpC,2BAAoB;AACpB,iCAA0B;AAC1B,yCAA+B;AAC/B,uCAAgC;AAWhC,kBAAiC,eAAuB;IAEpD,MAAM,OAAO,GAAG,oBAAU,CAAC;QAEvB,KAAK,EAAE,EAAE;QACT,OAAO,EAAE,CAAC,eAAe,CAAC;QAC1B,YAAY,EAAE,EAAE;QAChB,MAAM,EAAE,CAAC,kBAAQ,CAAC;KACrB,CAAC,CAAC;IAEH,MAAM,OAAO,GAAG,CAAC,gBAAwB;QAErC,OAAO,CAAC,MAAM,EAAE;aACX,IAAI,CAAC,YAAE,CAAC,iBAAiB,CAAC,gBAAgB,CAAC,CAAC,CAAC;IACtD,CAAC,CAAC;IAEF,MAAM,CAAC;QAEH,OAAO,CAAC,gBAAwB;YAE5B,OAAO,CAAC,gBAAgB,CAAC,CAAC;YAE1B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,KAAK,CAAC,UAAkB,EAAE;YAEtB,OAAO,CAAC,MAAM,CAAC,eAAK,EAAE,OAAO,CAAC,CAAC;YAE/B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,QAAQ;YAEJ,OAAO,CAAC,EAAE,CAAC,QAAQ,EAAE,OAAO,CAAC,CAAC;YAE9B,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,MAAM,CAAC,UAAkB,EAAE;YAEvB,OAAO,CAAC,SAAS,CAAC,mBAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;YAE1C,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,QAAQ,CAAC,OAAe;YAEpB,OAAO,CAAC,SAAS,CAAC,kBAAQ,EAAE,OAAO,CAAC,CAAC;YAErC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;KACJ,CAAC;AACN,CAAC;AAjDD,2BAiDC","sourcesContent":["import babelify from \"babelify\";\nimport browserify from \"browserify\";\nimport fs from \"fs\";\nimport tsify from \"tsify\";\nimport uglify from \"uglify-js\";\nimport watchify from \"watchify\";\n\nexport interface Compiler {\n\n    compile(pathToOutputFile: string): Compiler;\n    tsify(options: object): Compiler;\n    watchify(): Compiler;\n    uglify(options: object): Compiler;\n    babelify(options: object): Compiler;\n}\n\nexport default function compiler(pathToInputFile: string): Compiler {\n\n    const bundler = browserify({\n\n        cache: {},\n        entries: [pathToInputFile],\n        packageCache: {},\n        plugin: [watchify],\n    });\n\n    const compile = (pathToOutputFile: string): void => {\n\n        bundler.bundle()\n            .pipe(fs.createWriteStream(pathToOutputFile));\n    };\n\n    return {\n\n        compile(pathToOutputFile: string): Compiler {\n\n            compile(pathToOutputFile);\n\n            return this;\n        },\n        tsify(options: object = {}): Compiler {\n\n            bundler.plugin(tsify, options);\n\n            return this;\n        },\n        watchify(): Compiler {\n\n            bundler.on(\"update\", compile);\n\n            return this;\n        },\n        uglify(options: object = {}): Compiler {\n\n            bundler.transform(uglify.minify, options);\n\n            return this;\n        },\n        babelify(options: object): Compiler {\n\n            bundler.transform(babelify, options);\n\n            return this;\n        },\n    };\n}\n"]}