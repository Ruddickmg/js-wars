{"version":3,"file":"aiSocketListener.js","sourceRoot":"","sources":["aiSocketListener.ts"],"names":[],"mappings":";;AAGA,6CAAkD;AAGlD,0EAAsE;AAEtE,mBAAyB,OAAsB,EAAG,SAAuB;IAErE,MAAM,CAAC;QAEH,WAAW,CAAC,KAAY,EAAE,MAAW,EAAE,MAAW;YAE9C,MACI,MAAM,GAAW,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EACzC,IAAI,GAAY,MAAM,CAAC,IAAI,EAAE,EAC7B,QAAQ,GAAa,SAAS,CAAC,UAAU,CAAC,MAAM,EAAE,IAAI,CAAC,IAAI,EAAE,CAAC,CAAC;YAEnE,EAAE,CAAC,CAAC,cAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAEf,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,CAAC;gBAErB,MAAM,CAAC,SAAS,CAAC,eAAe,EAAE,QAAQ,CAAC,CAAC;gBAE5C,EAAE,CAAC,CAAC,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC,CAAC;oBAEhB,MAAM,CAAC,WAAW,CAAC,YAAY,EAAE,IAAI,CAAC,CAAC;gBAC3C,CAAC;YACL,CAAC;QACL,CAAC;QAED,cAAc,CAAC,KAAY,EAAE,MAAW,EAAE,MAAW;YAEjD,MACI,MAAM,GAAW,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,EACzC,IAAI,GAAY,MAAM,CAAC,IAAI,EAAE,EAC7B,QAAQ,GAAc,IAAI,CAAC,SAAS,CAAC,MAAM,CAAC,EAAE,CAAC,CAAC;YAEpD,IAAI,OAAgB,CAAC;YAErB,EAAE,CAAC,CAAC,cAAM,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAEf,IAAI,CAAC,YAAY,CAAC,QAAQ,CAAC,CAAC;gBAE5B,OAAO,GAAG,IAAI,CAAC,MAAM,EAAE,CAAC;gBAExB,EAAE,CAAC,CAAC,iCAAU,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC;oBAEvB,SAAS,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;gBAE/B,CAAC;gBAAC,IAAI,CAAC,CAAC;oBAEJ,MAAM,IAAI,KAAK,CAAC,yEAAyE,CAAC,CAAC;gBAC/F,CAAC;gBAED,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;oBAEV,MAAM,CAAC,WAAW,CAAC,SAAS,EAAE,IAAI,CAAC,OAAO,EAAE,CAAC,CAAC;gBAClD,CAAC;YACL,CAAC;QACL,CAAC;KACJ,CAAC;AACN,CAAC;AAvDD,4BAuDC;AAAA,CAAC","sourcesContent":["import {default as aiController, AiController} from \"./aiController\";\nimport {Listener} from \"../../connections/sockets/listener\";\nimport {ClientHandler} from \"../../clients/clients\";\nimport {AnyRoom, isRoom} from \"../../rooms/rooms\";\nimport {AiPlayer} from \"./aiPlayer\";\nimport {Client} from \"../../clients/client\";\nimport {AnyPlayer, isAiPlayer} from \"../players/playerSocketListener\";\n\nexport default function (clients: ClientHandler,  aiHandler: AiController): Listener {\n\n    return {\n\n        addAiPlayer(error: Error, player: any, socket: any): void {\n\n            const\n                client: Client = clients.bySocket(socket),\n                room: AnyRoom = client.room(),\n                aiPlayer: AiPlayer = aiHandler.addElement(player, room.name());\n\n            if (isRoom(room)) {\n\n                room.addAi(aiPlayer);\n\n                client.broadcast(\"aiPlayerAdded\", aiPlayer);\n\n                if (room.isFull()) {\n\n                    client.emitToLobby(\"removeRoom\", room);\n                }\n            }\n        },\n\n        removeAiPlayer(error: Error, player: any, socket: any): void {\n\n            const\n                client: Client = clients.bySocket(socket),\n                room: AnyRoom = client.room(),\n                aiPlayer: AnyPlayer = room.getPlayer(player.id);\n\n            let wasFull: boolean;\n\n            if (isRoom(room)) {\n\n                room.removePlayer(aiPlayer);\n\n                wasFull = room.isFull();\n\n                if (isAiPlayer(aiPlayer)) {\n\n                    aiHandler.remove(aiPlayer);\n\n                } else {\n\n                    throw new Error(\"Attempt at removing Ai Player from Game failed, non ai players detected\");\n                }\n\n                if (wasFull) {\n\n                    client.emitToLobby(\"addRoom\", room.getGame());\n                }\n            }\n        }\n    };\n};"]}