{"version":3,"file":"playerController.js","sourceRoot":"","sources":["playerController.ts"],"names":[],"mappings":"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","sourcesContent":["/* ------------------------------------------------------------------------------------------------------*\\\n   \n    controller/player.js modifies and returns properties of player objects in game\n   \n\\* ------------------------------------------------------------------------------------------------------*/\n\napp = require('../settings/app.js');\napp.game = require('../controller/game.js')\napp.co = require('../user/co.js');\napp.map = require('../controller/mapController.js');\napp.players = require('../controller/players.js');\napp.screen = require('../animation/screenController.js');\nScore = require('../definitions/score.js');\nunitController = require(\"../controller/unit.js\");\nbuildingController = require(\"../controller/building.js\");\n\ncomposer = require(\"../tools/composition.js\");\ntransmit = require(\"../sockets/transmitter.js\");\n\nmodule.exports = function () {\n\n    // var validate = new Validator(\"controller/players.js\");\n    \n    return {\n\n        update: function (player, update) {\n\n            player.id = update.id;\n            player.gold = update.gold;\n            player.special = update.special;\n            player.ready = app.game.started() || app.players.saved() !== undefined;\n            player.number = update.number;\n            player.co = app.co[update.co.toLowerCase()](player);\n            player.score = new Score(update.score);\n\n            return player;\n        },\n\n        id: function (player) {\n\n            return player.id;\n        },\n\n        setProperty: function (player, property, value) {\n\n            player[property] = value;\n\n            if (app.user.number() === this.number(player)) {\n\n                transmit.setUserProperty(player, property, value);\n            }\n\n            return player;\n        },\n\n        getProperty: function (player, property) {\n\n            return player[property];\n        },\n\n        setCo: function (player, co) {\n           \n            return this.setProperty(player, \"co\", app.co[co](player)); \n        },\n\n        color: function (player) {\n\n            // figure out color system\n\n            return this.number(player);\n        },\n\n        index: function (player) {\n\n            // may need to change this to account for copies\n\n            return app.players.indexOf(player);\n        },\n\n        setNumber: function (player, number) {\n\n            player.number = number;\n\n            return player;\n        },\n\n        number: function (player) {\n\n            return player.number;\n        },\n\n        endTurn: function () {\n\n            // update score\n            if ((current = app.players.current()) === app.user.player()) {\n\n                app.user.score.update(this.score(current));\n            }\n\n            app.map.clean();\n\n            current.isTurn = false;\n\n            // get the next players\n            var player = composer.functions([\n\n                this.collectIncome, \n                this.recover,\n                this.endPower,\n                this.resetScore\n\n            ], app.players.next());\n\n            player.isTurn = true;\n\n            // move the screen to the next players headquarters\n            app.screen.moveTo(buildingController.position(this.hq(player)));\n\n            // assign the next players as the current players\n            app.players.setCurrent(player);\n\n            // if the players is ai then send the games current state\n            if (this.isComputer(player)) {\n\n                transmit.aiTurn(player);\n            }\n        },\n\n        setScore: function (player, score) {\n\n            player.score = score;\n\n            return player;\n        },\n\n        resetScore: function (player) {\n\n            player.score = new Score();\n\n            return player;\n        },\n\n        endPower: function (player) {\n\n            player.co.endPower();\n\n            return player;\n        },\n\n        recover: function (player) {\n\n            var units = app.map.units();\n\n            // check for units that belong to the current players\n            app.map.setUnits(units.map(function (unit) { \n\n                var element = unitController.occupies(unit);\n\n                if (unitController.owns(player, unit)) {\n\n                    unit = unitController.recover(unit);\n\n                    // playerController is difficult here, scoping does not work with this so name reliance \n                    if (buildingController.owns(player, element) && buildingController.canHeal(unit, element)) { \n\n                        unit = unitController.repair(unit);\n                    }\n                }\n\n                return unit;\n\n            }));\n\n            app.map.setBuildings(app.map.buildings().map(function (building) {\n\n                var unit = buildingController.occupied(building);\n\n                if (!unit || buildingController.owns(building, unit)) {\n\n                    building = buildingController.restore(building);\n                }\n\n                return building;\n            }));\n\n            return player;\n        },\n\n        isComputer: function (player) {\n\n            var isComputer = player.isComputer;\n\n            if (!isBoolean(isComputer)) {\n\n                throw new Error(\"isComputer must be boolean value, found: \" + isComputer, \"controller/players.js\");\n            }\n\n            return isComputer;\n        },\n\n        isReady: function (player, state) { // check this out for functionality\n\n            player.ready = state; \n\n            app.players.checkReady();\n\n            return player;\n        },\n\n        displayedInfo: function (player) {\n\n            var info = this.score(player).display();\n            \n            info.bases = this.buildings(player).length;\n            info.income = this.income(player);\n            info.funds = this.gold(player);\n            info.player = this.number(player);\n\n            return info;\n        },\n\n        ready: function (player) { \n\n            return player.ready; \n        },\n\n        income: function (player) {\n\n            var scope = this, funds = app.game.settings().funds;\n\n            var income = app.map.buildings().reduce(function (money, building) {\n\n                return money + (scope.owns(player, building) ? funds : 0);\n\n            }, 0);\n\n            return income;\n        },\n\n        collectIncome: function (player) {\n\n            var income = playerController.income(player);\n\n            player.score.income(income);\n            player.gold += income;\n\n            return player;\n        },\n\n        defeat: function (player1, player2, capturing) {\n\n            if (app.user.owns(player1)) { \n\n                transmit.defeat(player1, player2, capturing);\n            }\n\n            this.score(player1).conquer();\n            this.score(player2).defeat();\n\n            app.players.defeat(player2);\n\n            var buildings = app.map.buildings();\n            var building, l = buildings.length;\n\n            capturing = capturing ? player1 : capturing;\n\n            // assign all the buildings belonging to the owner of the captured hq to the capturing players\n            while (l--) {\n\n                if (this.owns(player, (building = buildings[l]))) {\n\n                    this.lostBuilding(player2);\n                    this.score(player1).capture();\n\n                    if (buildingController.isHQ(building)) {\n\n                        app.map.takeHQ(building);\n                    }\n\n                    buildingController.changeOwner(capturing, building);\n                }\n            }\n\n            app.animate('building');\n        },\n\n        score: function (player) {\n\n            return player.score;\n        },\n\n        get: function (player) { \n\n            return app.players.get(player); \n        },\n\n        isTurn: function (player) { // change this outside of object \n\n            return this.id(player) === this.id(app.players.current()); \n        },\n\n        first: function (player) { \n\n            return this.id(player) === this.id(app.players.moveToFirst()); \n        },\n\n        special: function (player) { \n\n            return player.special; \n        },\n\n        gold: function (player) { \n\n            return player.gold; \n        },\n\n        canPurchase: function (player, cost) { \n\n            return this.gold(player) - cost >= 0; \n        },\n\n        purchase: function (player, cost) {\n\n            this.score(player).expenses(cost);\n\n            return this.setGold(player, this.gold(player) - cost);\n        },\n\n        setGold: function (player, gold) {\n\n            return gold >= 0 ? (player.gold = gold) + 1 : false; \n        },\n\n        owns: function (player, object) { // could modify game parameters to add a dimension to the game like territory\n\n            return this.id(this.get(player)) === buildingController.playerId(object); \n        },\n\n        co: function (player) {\n\n            if (player) {\n\n                return player.co;\n            }\n\n            return player;\n        },\n\n        units: function (player) {\n\n            var units = app.map.units();\n            var owned = [];\n            var l = units.length;\n\n            while (l--) {\n\n                if (this.owns(player, units[l])) {\n\n                    owned.push(units[l]);\n                }\n            }\n\n            return owned;\n        },\n\n        buildings: function (player) {\n\n            var scope = this;\n\n            return app.map.buildings().filter(function (building) {\n\n                return scope.owns(player, building);\n            });\n        },\n\n        confirm: function (player) {\n\n            player.confirmation = true;\n\n            return player; \n        },\n\n        confirmed: function (player) { \n\n            return player.confirmation;\n        },\n\n        unconfirm: function (player) { \n\n            delete player.confirmation; \n\n            return player;\n        },\n\n        hq: function (player) {\n\n            var buildings = app.map.buildings();\n            var building, l = buildings.length;\n\n            while (l--) {\n\n                building = buildings[l];\n\n                if (buildingController.isHQ(building) && buildingController.owns(player, building)) {\n\n                    return building;\n                }\n            }\n        }\n    };\n}();"]}