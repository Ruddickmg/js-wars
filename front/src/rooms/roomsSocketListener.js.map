{"version":3,"file":"roomsSocketListener.js","sourceRoot":"","sources":["roomsSocketListener.ts"],"names":[],"mappings":"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","sourcesContent":["import {Client} from \"../clients/client\";\nimport {ClientHandler} from \"../clients/clients\";\nimport {Listener} from \"../connections/sockets/listener\";\nimport {AiController} from \"../users/ai/aiController\";\nimport {default as createPlayer, Player} from \"../users/players/player\";\nimport {default as createUser, User, UserId} from \"../users/user\";\nimport {Lobby} from \"./lobby\";\nimport {Room} from \"./room\";\nimport {isRoom, Rooms} from \"./rooms.js\";\n\nexport default function(clients: ClientHandler, rooms: Rooms, aiHandler: AiController): Listener {\n\n    return {\n\n        addUser(error: Error, {loginData, origin}: any, socket: any): void {\n\n            const user: User = createUser(loginData, origin);\n            const player: Player = createPlayer(user);\n            const id: UserId = user.id;\n\n            let client;\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            if (clients.wasDisconnected(id)) {\n\n                clients.reconnect(id).setSocket(socket);\n\n            } else {\n\n                clients.addElement(socket, id)\n                    .setPlayer(player)\n                    .setUser(user);\n            }\n\n            client = clients.byId(id);\n            client.joinRoom(rooms.lobby());\n            client.emit(\"player\", player);\n        },\n        join(error: Error, room: any, socket: any): void {\n\n            const client: Client = clients.bySocket(socket);\n            const storedRoom: Room = rooms.get(room);\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            if (storedRoom) {\n\n                client.joinRoom(storedRoom);\n                client.emit(\"joinedGame\", storedRoom.getGame());\n                client.broadcast(\"getPlayerStates\", true);\n                client.broadcast(\"userJoined\", client.player());\n\n            } else {\n\n                console.log(\"Room not found in join.\");\n            }\n        },\n        newRoom(error: Error, game: any, socket: any) {\n\n            const client: Client = clients.bySocket(socket);\n            const existingRoom: Room = rooms.get(game);\n\n            let room: Room;\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            if (existingRoom) {\n\n                client.emit(\"roomAlreadyExists\", existingRoom.getGame());\n\n            } else {\n\n                room = rooms.addElement(game);\n                client.joinRoom(room);\n                client.emit(\"joinedGame\", game);\n                client.emitToLobby(\"addRoom\", game);\n            }\n        },\n        disconnect(error: Error, _: any, socket: any): void {\n\n            const client: Client = clients.bySocket(socket);\n            const room: Room | Lobby = client.room();\n\n            if (error !== undefined) {\n\n                throw error;\n            }\n\n            clients.disconnect(socket);\n\n            if (isRoom(room) && room.isEmpty()) {\n\n                rooms.remove(room);\n\n                aiHandler.remove(...room.getAiPlayers());\n            }\n        },\n    };\n};"]}